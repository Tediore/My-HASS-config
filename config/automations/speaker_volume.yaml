- alias: Set speaker volume based on app
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - sensor.portable_speaker_app_name
    - sensor.bedroom_speaker_app_name
    - sensor.hub_app_name
    - sensor.kitchen_speaker_app_name
    - sensor.living_room_speaker_app_name
  condition:
  - condition: state
    entity_id: binary_sensor.quiet_hours
    state: 'off'
  - condition: template
    value_template: "{{ trigger.to_state.state != '' }}"
  action:
  - service: media_player.volume_set
    data_template:
      entity_id: "{{ 'media_player.' + trigger.to_state.name.lower().replace(' ','_') }}"
      volume_level: >
        {% set speaker = trigger.to_state.entity_id.replace('sensor.','').replace('_app_name','') %}
        {% set app = trigger.to_state.state %}
        {% if app == 'iHeartRadio' %}
          {% if speaker in ['portable_speaker', 'living_room_speaker'] %}
            0.45
          {% elif speaker in ['bedroom_speaker', 'kitchen_speaker'] %}
            0.4
          {% elif speaker == 'hub' %}
            0.5
          {% else %}
            0.4
          {% endif %}
        {% elif app in ['Google Play Music', 'Spotify'] %}
          {% if speaker in ['bedroom_speaker', 'kitchen_speaker', 'living_room_speaker'] %}
            0.36
          {% elif speaker == 'portable_speaker' %}
            0.3
          {% elif speaker == 'hub' %}
            0.4
          {% else %}
            0.36
          {% endif %}
        {% else %}
          {% if speaker == 'portable_speaker' %}
            0.45
          {% else %}
            0.4
          {% endif %}
        {% endif %}


- alias: Boost volume when furnace on
  initial_state: 'on'
  trigger:
  - platform: template
    value_template: "{{ state_attr('climate.thermostat', 'hvac_action') in ['heating', 'cooling'] }}"
  condition:
  - condition: state
    entity_id: binary_sensor.quiet_hours
    state: 'off'
  - condition: template
    value_template: "{{ not is_state('sensor.living_room_speaker_app_name', '') }}"
  action:
    service: media_player.volume_set
    entity_id: media_player.living_room_speaker
    data_template:
      volume_level: >
        {% set app = states('sensor.living_room_speaker_app_name') %}
        {% if app == 'iHeartRadio' %}
          0.55
        {% else %}
          0.44
        {% endif %}


- alias: Return volume when furnace off
  initial_state: 'on'
  trigger:
  - platform: template
    value_template: "{{ state_attr('climate.thermostat', 'hvac_action') in ['off', 'idle'] }}"
  condition:
  - condition: state
    entity_id: binary_sensor.quiet_hours
    state: 'off'
  - condition: template
    value_template: "{{ not is_state('sensor.living_room_speaker_app_name', '') }}"
  action:
    service: media_player.volume_set
    entity_id: media_player.living_room_speaker
    data_template:
      volume_level: >
        {% set app = states('sensor.living_room_speaker_app_name') %}
        {% if app == 'iHeartRadio' %}
          0.45
        {% else %}
          0.36
        {% endif %}