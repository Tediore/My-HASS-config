- alias: Speak alarm disarmed - home
  initial_state: 'on'
  trigger:
  - entity_id: alarm_control_panel.abode
    platform: state
    from: armed_home
    to: disarmed
  condition:
  - condition: template
    value_template: "{{ states('media_player.living_room_speaker') in ['off', 'idle'] }}"
  - condition: time
    after: '08:00:00'
  action:
  - service: tts.google
    entity_id: media_player.living_room_speaker
    data:
      message: "Alarm off."
  - delay: '00:00:10'
  - service: media_player.turn_off
    entity_id: media_player.living_room_speaker


- alias: Speak welcome home
  initial_state: 'on'
  trigger:
  - entity_id: alarm_control_panel.abode
    platform: state
    from: armed_away
    to: disarmed
  action:
  - service: tts.google
    entity_id: media_player.living_room_speaker
    data:
      message: "Welcome home."
  - delay: '00:00:15'
  - service: media_player.volume_set
    data:
      entity_id: media_player.living_room_speaker
      volume_level: 0.4


- alias: Speak alarm on home
  initial_state: 'on'
  trigger:
  - entity_id: alarm_control_panel.abode
    platform: state
    to: armed_home
  condition:
  - condition: template
    value_template: "{{ states('media_player.living_room_speaker') in ['off', 'idle'] }}"
  action:
  - service: tts.google
    entity_id: media_player.living_room_speaker
    data:
      message: "Alarm on. Home."
  - delay: '00:00:10'
  - service: media_player.turn_off
    entity_id: media_player.living_room_speaker


- alias: Speak when Home Assistant starts
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: start
  condition:
  - condition: template
    value_template: "{{ states('media_player.portable_speaker') in ['off', 'idle'] }}"
  - condition: template
    value_template: "{{ states('alarm_control_panel.abode') in ['armed_home', 'disarmed'] }}"
  action:
  - service: tts.google
    entity_id: media_player.portable_speaker
    data:
      message: "Server online."
  - delay: '00:00:10'
  - service: media_player.turn_off
    entity_id: media_player.portable_speaker