automation:
- alias: Lights off backup attempt
  id: 'noo5ePh0ophohH9oa1ahj7'
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.sleep_mode
    to: 'on'
    for: '00:00:10'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: group.lights_interior
      state: 'on'
    - condition: state
      entity_id: light.cabinet_lights_dimmer
      state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.good_night_no_noise


- alias: Repeat white noise in sleep mode
  id: 'tha9phooh7ReicomahdieS'
  initial_state: true
  trigger:
  - platform: state
    entity_id:
    - &bedroom_speaker media_player.bedroom_speaker
    - media_player.guest_bedroom_clock
    from: 'playing'
    to: 'idle'
  condition:
  - condition: state
    entity_id: input_boolean.white_noise
    state: 'on'
  action:
  - service: media_player.play_media
    data:
      entity_id: "{{ trigger.to_state.entity_id }}"
      media_content_id: >
        {% set url = 'http://10.0.1.2:3453/audio/white_noise' %}
        {% set ext = '.mp3' %}
        {% set time = now().strftime('%H%M') | int %}
        {% if time < 545 %}
          {% set file = '' %}
        {% elif time < 600 %}
          {% set file = '_45m' %}
        {% elif time < 615 %}
          {% set file = '_30m' %}
        {% else %}
          {% set file = '_15m' %}
        {% endif %}
        {{ url }}{{ file }}{{ ext }}
      media_content_type: audio/mp3
  - if:
    - "{{ now().strftime('%H%M') | int > 540 }}"
    then:
    - service: input_boolean.turn_off
      entity_id: input_boolean.white_noise


# - alias: Turn bedroom fan on after Andy's button pressed
#   initial_state: true
#   trigger:
#   - platform: state
#     entity_id: input_boolean.andy_sleep
#     to: 'on'
#     for: '00:20:00'
#   action:
#   - service: switch.turn_on
#     entity_id: switch.bedroom_fan


script:
  good_night:
    alias: Good night
    sequence:
    - service: input_boolean.turn_on
      entity_id: 
      - input_boolean.sleep_mode
      - input_boolean.andy_sleep
    - service: script.turn_on
      entity_id: script.white_noise_bedroom
    - service: script.turn_on
      entity_id: script.lights_off_interior
    - service: homeassistant.turn_off
      entity_id: 
      - input_boolean.washer
      - input_boolean.dryer
      - switch.air_freshener
    - service: homeassistant.turn_on
      entity_id: 
      - script.media_players_off
      - script.christmas_lights_off
      - script.master_bedroom_ac_on
      - switch.master_bedroom_fan
    - service: light.turn_on
      entity_id: light.master_bath_night_light
      data:
        brightness_pct: 10
    - if:
      - "{{ is_state('alarm_control_panel.home', 'disarmed') }}"
      then:
      - service: alarm_control_panel.alarm_arm_home
        data:
          entity_id: alarm_control_panel.home
          code: !secret alarm_code_system
    - if:
      - "{{ is_state('switch.humidifier', 'off') }}"
      then:
      - service: switch.turn_on
        entity_id: switch.humidifier


  good_night_no_noise:
    alias: Good night routine - no white noise
    sequence:
    - service: homeassistant.turn_off
      entity_id: 
      - group.lights_interior
      - input_boolean.christmas_porch_light_loop
      - media_player.living_room_vizio
      - switch.air_freshener
    - service: script.turn_on
      entity_id: script.christmas_lights_off
    - service: switch.turn_on
      entity_id: switch.master_bedroom_fan
    - service: input_boolean.turn_on
      entity_id: input_boolean.sleep_mode
    - if:
      - "{{ is_state('alarm_control_panel.home', 'disarmed') }}"
      then:
      - service: alarm_control_panel.alarm_arm_home
        data:
          entity_id: alarm_control_panel.home
          code: !secret alarm_code_system
    - if:
      - "{{ is_state('switch.humidifier', 'off') }}"
      then:
      - service: switch.turn_on
        entity_id: switch.humidifier


  good_night_andy:
    sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.andy_sleep
    - service: script.turn_on
      entity_id: script.white_noise_bedroom
    - service: homeassistant.turn_off
      entity_id:
      - light.hallway
      - light.master_bedroom_lamps
      - light.master_bedroom_fan
      - light.craft_room
      - light.tea_lights
      - media_player.bedroom_tv
      - group.lights_christmas
    - service: light.turn_on
      entity_id: light.master_bath_night_light
      data:
        brightness_pct: 10
    - if:
      - "{{ is_state('alarm_control_panel.home', 'disarmed') }}"
      then:
      - service: alarm_control_panel.alarm_arm_home
        data:
          entity_id: alarm_control_panel.home
          code: !secret alarm_code_system
    - if:
      - "{{ is_state('switch.humidifier', 'off') }}"
      then:
      - service: switch.turn_on
        entity_id: switch.humidifier


  good_night_andy_basement:
    sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.andy_sleep
    - service: light.turn_off
      entity_id: light.guest_bedroom
    - service: light.turn_on
      entity_id: light.basement_bath_night_light
      data:
        brightness_pct: 100
    - service: script.white_noise_speaker
      data:
        speaker: media_player.guest_bedroom_speaker
    - service: alarm_control_panel.alarm_arm_home
      data:
        entity_id: alarm_control_panel.home
        code: !secret alarm_code_system


  good_night_basement:
    alias: Good night basement
    sequence:
    - service: input_boolean.turn_on
      data_template:
        entity_id: 
        - input_boolean.andy_sleep
        - input_boolean.sleep_mode
    - service: script.turn_on
      entity_id: script.lights_off_interior
    - service: light.turn_off
      entity_id: light.back_side_security
    - service: homeassistant.turn_off
      entity_id: 
      - input_boolean.washer
      - input_boolean.dryer
      - switch.air_freshener
    - service: homeassistant.turn_on
      entity_id: 
      - script.media_players_off
      - script.christmas_lights_off
      - switch.guest_bedroom_fan
    - service: alarm_control_panel.alarm_arm_home
      data:
        entity_id: alarm_control_panel.home
        code: !secret alarm_code_system
    - condition: state
      entity_id: media_player.guest_bedroom_speaker
      state: 'off'
    - service: script.white_noise_speaker
      data:
        speaker: media_player.guest_bedroom_speaker


  good_night_guest:
    sequence:
    - service: script.turn_on
      entity_id: script.white_noise_bedroom
    - service: light.turn_on
      entity_id: light.master_bath_night_light
      data:
        brightness_pct: 10


  white_noise_bedroom:
    alias: Play white noise on bedroom speaker
    sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.white_noise
    - service: media_player.volume_mute
      entity_id: *bedroom_speaker
      data:
        is_volume_muted: true
    - service: media_player.turn_on
      entity_id: *bedroom_speaker
    - service: media_player.play_media
      entity_id: *bedroom_speaker
      data:
        media_content_id: 'http://10.0.1.2:3453/audio/silence.mp3'
        media_content_type: audio/mp3
    - delay: '00:00:02'
    - service: media_player.volume_set
      entity_id: *bedroom_speaker
      data_template:
        volume_level: "{{ states('input_number.white_noise_vol') | int(0) / 100 }}"
    - delay: '00:00:02'
    - service: media_player.play_media
      entity_id: *bedroom_speaker
      data:
        media_content_id: !secret white_noise
        media_content_type: audio/mp3
    - wait_template: "{{ is_state('*bedroom_speaker', 'playing') }}"
      timeout: '00:00:10'
      continue_on_timeout: true
    - service: media_player.volume_mute
      entity_id: *bedroom_speaker
      data:
        is_volume_muted: false


  white_noise_speaker:
    alias: Play white noise on selected speaker
    sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.white_noise
    - service: media_player.volume_mute
      data:
        entity_id: &speaker "{{ speaker }}"
        is_volume_muted: true
    - service: media_player.turn_on
      data:
        entity_id: *speaker
    - service: media_player.play_media
      data:
        entity_id: *speaker
        media_content_id: 'http://10.0.1.2:3453/audio/silence.mp3'
        media_content_type: audio/mp3
    - delay: '00:00:02'
    - service: media_player.volume_set
      data:
        entity_id: *speaker
        volume_level: "{{ states('input_number.white_noise_vol') | int(0) / 100 }}"
    - delay: '00:00:02'
    - service: media_player.play_media
      data:
        entity_id: *speaker
        media_content_id: !secret white_noise
        media_content_type: audio/mp3
    - wait_template: "{{ is_state('*bedroom_speaker', 'playing') }}"
      timeout: '00:00:10'
      continue_on_timeout: true
    - service: media_player.volume_mute
      data:
        entity_id: *speaker
        is_volume_muted: false


  media_players_off:
    sequence:
    - service: media_player.turn_off
      entity_id:
      - media_player.living_room_speaker
      - media_player.office_speaker
      - media_player.hub
      - media_player.kitchen_speaker


  master_bedroom_ac_on:
    sequence:
    - condition: state
      entity_id: input_boolean.auto_bedroom_ac
      state: 'on'
    - condition: not
      conditions:
      - condition: state
        entity_id: climate.thermostat
        state:
        - 'heat'
        - 'off'
    - condition: numeric_state
      entity_id: 
      - sensor.outside_temp
      - sensor.outside_temp_darksky
      above: 65
    - service: climate.set_temperature
      entity_id: climate.bedroom_ac
      data:
        temperature: >
          {% if is_state('climate.bedroom_ac', 'cool') %}
            {{ state_attr('climate.bedroom_ac', 'temperature') | int(0) }}
          {% elif is_state('input_boolean.sleep_mode', 'on') %}
            {{ states('input_number.bedroom_ac_temp_matt') | int(0) }}
          {% else %}
            {{ states('input_number.bedroom_ac_temp_andy') | int(0) }}
          {% endif %}
    - service: climate.turn_on
      entity_id: climate.bedroom_ac


  lights_off_interior:
    sequence:
    - service: homeassistant.turn_off
      data:
        entity_id: "group.lights_interior{{ '' if is_state('input_boolean.guest_in_master', 'off') else '_guest_in_master' }}"


input_number:
  white_noise_vol:
    name: White noise volume
    min: 40
    max: 80
    step: 2
    unit_of_measurement: '%'
    mode: slider


input_boolean:
  sleep_mode:
  andy_sleep:
  sleep_mode_guest:
  white_noise:
  auto_bedroom_ac:
  basement_bedroom:
  guest_in_master: