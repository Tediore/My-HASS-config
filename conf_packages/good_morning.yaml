automation:
- alias: Good morning - workday
  id: 'Too9leichah6zeikee1nap'
  initial_state: true
  trigger:
  - platform: time
    at: &wakeup_time input_datetime.lights_wakeup
  condition:
  - condition: state
    entity_id: binary_sensor.workday
    state: 'on'
  - "{{ states('input_text.alarm') in ['armed_home', 'armed_night', 'disarmed'] }}"
  action:
  - service: script.turn_on
    entity_id: script.good_morning
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'on'
  - condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  - service: script.lights_sunset


- alias: Set workday wakeup time
  id: 'IG8faiheing2zohdeeBasa'
  initial_state: true
  trigger:
  - platform: template
    value_template: "{{ is_state_attr('calendar.andy_work', 'message', 'Work') }}"
  - platform: template
    value_template: "{{ 'from home' in state_attr('calendar.andy_work', 'message') }}"
  action:
  - service: input_datetime.set_datetime
    entity_id: *wakeup_time
    data:
      time: "{{ '06:50:00' if is_state_attr('calendar.andy_work', 'message', 'Work') else '07:15:00' }}"


script:
  good_morning:
    alias: Workday wakeup routine
    sequence:
    - service: script.turn_on
      entity_id: script.lights_wakeup
    - service: homeassistant.turn_off
      entity_id:
      - input_boolean.sleep_mode
      - input_boolean.andy_sleep
      - light.main_bath_night_light
    - if:
      - "{{ is_state('switch.humidifier', 'on') }}"
      then:
      - service: switch.turn_off
        entity_id: switch.humidifier
  

  lights_wakeup:
    sequence:
    - service: mqtt.publish
      data:
        topic: 'zigbee2mqtt/Andy/set'
        payload: &payload '{"scene_recall": 2}'
    - service: mqtt.publish
      data:
        topic: 'zigbee2mqtt/Matt/set'
        payload: *payload
    - delay: '00:02:00'
    - condition: state
      entity_id: &lights_wakeup light.main_bedroom_lamps
      state: 'on'
    - service: light.turn_on
      entity_id: *lights_wakeup
      data:
        transition: 360
        brightness_pct: 100
        kelvin: 3500


binary_sensor:
- platform: template
  sensors:
    workday:
      value_template: >
        {{
          as_timestamp(now()) | timestamp_custom('%d') == as_timestamp(state_attr('calendar.andy_work', 'start_time')) | timestamp_custom('%d')
        or 
          as_timestamp(now()) | timestamp_custom('%d') == as_timestamp(state_attr('calendar.work', 'start_time')) | timestamp_custom('%d')
        }}


input_datetime:
  lights_wakeup:
    has_time: true
    has_date: false