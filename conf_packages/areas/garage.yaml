automation:
- alias: Turn garage lights on with garage door
  id: 'oshugh9chie0gohtieR1Fi'
  initial_state: true
  trigger:
  - platform: state
    entity_id: &garage_door cover.garage_door
    from: 'closed'
    to: 'open'
  - platform: state
    entity_id: sun.sun
    to: 'below_horizon'
  condition:
  - condition: state
    entity_id: *garage_door
    state: 'open'
  action:
  - service: switch.turn_on
    entity_id: &garage_lights switch.garage_lights


- alias: Turn garage lights on with service door
  id: 'OoPeiy9eBaek4ha3Pooc3u'
  initial_state: true
  trigger:
  - platform: state
    entity_id: &service_door binary_sensor.garage_service_door
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: *garage_lights
    state: 'off'
  - condition: or
    conditions:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
    - condition: state
      entity_id: *garage_door
      state: 'closed'
  action:
  - service: switch.turn_on
    entity_id: *garage_lights


- alias: Turn garage lights off when garage and service door closed for 10 minutes
  id: 'echai5koodooza6Zeequar'
  initial_state: true
  trigger:
  - platform: state
    entity_id:
    - *garage_door
    - *service_door
    to:
    - 'closed'
    - 'off'
    for: &closed_time '00:10:00'
  condition:
  - condition: state
    entity_id: *garage_door
    state: 'closed'
    for: *closed_time
  - condition: state
    entity_id: *service_door
    state: 'off'
    for: *closed_time
  action:
  - service: switch.turn_off
    entity_id: *garage_lights


- alias: Open garage door when service door opened if leaving
  id: 'Aabee2Ne3engeichoomu8a'
  initial_state: true
  trigger:
  - platform: state
    entity_id: *service_door
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.leaving
    state: 'on'
  - condition: state
    entity_id: *garage_door
    state: 'closed'
  action:
  - service: cover.open_cover
    entity_id: *garage_door
  - service: input_boolean.turn_off
    entity_id: input_boolean.leaving


- alias: Unlock garage service door when leaving
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.leaving
    to: 'on'
    for: '00:00:05'
  condition:
  - condition: state
    entity_id: lock.garage_service_door
    state: 'locked'
  action:
  - service: lock.unlock
    entity_id: lock.garage_service_door
  - service: input_boolean.turn_on
    entity_id: &autolock input_boolean.garage_service_door_autolock


- alias: Relock garage service door if not opened
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_service_door
    to: 'on'
    id: 'door'
  - platform: state
    entity_id: *autolock
    to: 'on'
    for: '00:01:00'
    id: 'autolock'
  condition:
  - condition: state
    entity_id: *autolock
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: *autolock
  - condition: "{{ trigger.id == 'autolock' }}"
  - service: lock.lock
    entity_id: lock.garage_service_door


mqtt:
  cover:
  - name: Garage door
    command_topic: "cmnd/garage_door/POWER"
    state_topic: "stat/garage_door/status"
    availability_topic: "tele/garage_door/LWT"
    qos: 1
    payload_available: "Online"
    payload_not_available: "Offline"
    payload_open: "ON"
    payload_close: "ON"
    payload_stop: "ON"
    state_open: "open"
    state_closed: "closed"
    device_class: garage


script:
  close_garage:
    sequence:
    - condition: state
      entity_id: &garage cover.garage_door
      state: 'open'
    - service: cover.close_cover
      entity_id: *garage

  open_garage:
    sequence:
    - condition: state
      entity_id: *garage
      state: 'closed'
    - service: cover.open_cover
      entity_id: *garage


template:
- sensor:
  - name: Garage service door lock
    state: "{{ states('lock.garage_service_door').title() }}"
    icon: >
      {% set state = states('lock.front_door') %}
      {% if state == 'locked' %}
        mdi:lock-outline
      {% elif state == 'unlocked' %}
        mdi:lock-open-variant-outline
      {% else %}
        mdi:lock-question
      {% endif %}


input_boolean:
  garage_service_door_autolock: