automation:
- alias: Matt's office remote main
  id: 'matt_office_remote_main'
  initial_state: true
  mode: queued
  trigger:
  - platform: state
    entity_id: sensor.matt_office_switch_action
    to: 'off_press_release'
  action:
  - service: homeassistant.turn_off
    target: 
      entity_id: fan.matt_office


- alias: Matt's office desk remote
  id: 'phe5ea2ahCeid4joo6yoo4'
  initial_state: true
  mode: parallel
  trigger:
  - platform: state
    entity_id: sensor.matt_office_desk_remote_action
    to: &remote_states
    # first button
    - 'on'
    - 'off'
    # second button
    - 'brightness_down'
    - 'brightness_move_down'
    - 'brightness_move_up'
    - 'brightness_up'
    # third button
    - 'colortemp_up'
    - 'colortemp_down'
    # fourth button
    - 'recall'
  action:
  - service: script.turn_on
    data:
      entity_id: >
        {% set command = trigger.to_state.state %}
        {% if command in ['on', 'off'] %}
          script.turn_off_office_speaker
        {% elif 'brightness' in command %}
          script.toggle_mute_office_speaker
        {% elif 'colortemp' in command %}
          script.toggle_office_fan
        {% else %}
          script.toggle_office_fan_position
        {% endif %}


- alias: Matt's office table button
  id: 'ahtuph9teboo8jae2aiSai'
  initial_state: true
  trigger:
  - platform: state
    entity_id: sensor.office_desk_button
    to: *remote_states
  action:
  - choose:
    - conditions:
      - "{{ trigger.to_state.state in ['on', 'off'] }}"
      sequence:
      - service: switch.toggle
        entity_id: switch.office_fan


script:
  turn_off_office_speaker:
    sequence:
    - service: media_player.turn_off
      entity_id: media_player.office_speaker

  toggle_mute_office_speaker:
    sequence:
    - choose:
      - conditions:
        - condition: template
          value_template: "{{ is_state_attr('media_player.office_speaker', 'app_name', 'Google Play Music') }}"
        sequence:
        - service: media_player.media_play_pause
          entity_id: media_player.office_speaker
      default:
      - service: media_player.volume_mute
        entity_id: media_player.office_speaker
        data:
          is_volume_muted: "{{ false if state_attr('media_player.office_speaker', 'is_volume_muted') else true }}"

  toggle_office_fan:
    sequence:
    - service: script.ir_fan_power
      data:
        blaster: matt_office_ir

  toggle_office_fan_position:
    sequence:
    - service: script.ir_fan_oscillation
      data:
        blaster: matt_office_ir


fan:
- platform: template
  fans:
    matt_office:
      friendly_name: Matt office fan
      unique_id: 'matt-office-fan'
      value_template: "{{ states('sensor.matt_office_fan_plug_energy_power') | float(0) > 10 }}"
      percentage_template: 12.5
      oscillating_template: True
      turn_on:
      - condition: "{{ states('sensor.matt_office_fan_plug_energy_power') | float(0) < 10 }}"
      - service: script.ir_fan_power
        data:
          blaster: &blaster matt_office_ir
      turn_off:
      - condition: "{{ states('sensor.matt_office_fan_plug_energy_power') | float(0) > 10 }}"
      - service: script.ir_fan_power
        data:
          blaster: *blaster
      set_percentage:
      - service: script.ir_fan_speed
        data:
          blaster: *blaster
      set_oscillating:
      - service: script.ir_fan_oscillation
        data:
          blaster: *blaster
      speed_count: 8