automation:
- alias: Turn office lamps on at sunset
  id: 'ra4naiPhohg3lighuu6aat'
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.dark_inside
    to: 'on'
  condition:
  - condition: state
    entity_id: binary_sensor.xbox
    state: 'on'
  action:
  - service: light.turn_on
    entity_id: 
    - &office_lamps light.matt_office_lamps
    data:
      color_temp_kelvin: 2200
      transition: 10
      brightness_pct: 100


# - alias: Switch lights when Xbox turned on
#   id: 'ungeiW8ieloid2Aedoht1s'
#   initial_state: true
#   trigger:
#   - platform: state
#     entity_id: binary_sensor.xbox
#     from: 'off'
#     to: 'on'
#   condition:
#   - condition: state
#     entity_id: *office_lamps
#     state: 'on'
#   action:
#   - service: light.turn_on
#     entity_id: *office_lamps
#     data:
#       transition: 3
#       brightness_pct: 50
#   - if:
#     - condition: state
#       entity_id: &office_spkr media_player.office_speaker
#       state: 'on'
#     then:
#     - service: media_player.turn_off
#       entity_id: *office_spkr


# - alias: Switch lights when Xbox turned off
#   id: 'wiyuShahNeifootho5ai'
#   initial_state: true
#   trigger:
#   - platform: state
#     entity_id: binary_sensor.xbox
#     from: 'on'
#     to: 'off'
#   action:
#   - service: light.turn_off
#     entity_id: *bias_lighting
#   - condition: state
#     entity_id: *office_lamps
#     state: 'on'
#   - service: light.turn_on
#     entity_id: *office_lamps
#     data:
#       transition: 3
#       brightness_pct: 100


# - alias: Poll Xbox UPS
#   id: 'poll-xbox-ups'
#   initial_state: true
#   trigger:
#   - platform: time_pattern
#     seconds: '/15'
#   action:
#   - service: homeassistant.update_entity
#     data:
#       entity_id: sensor.xbox_ups_load


light:
- platform: group
  name: Matt office lamps
  entities:
  - light.office_shelf_lamp
  - light.office_table_lamp


fan:
- platform: template
  fans:
    matt_office:
      friendly_name: Matt office fan
      value_template: "{{ states('sensor.matt_office_fan_plug_energy_power') | float(0) > 10 }}"
      percentage_template: 12.5
      oscillating_template: True
      turn_on:
      - condition: "{{ states('sensor.matt_office_fan_plug_energy_power') | float(0) < 10 }}"
      - service: script.ir_fan_power
        data:
          blaster: &blaster matt_office_ir
      turn_off:
      - condition: "{{ states('sensor.matt_office_fan_plug_energy_power') | float(0) > 10 }}"
      - service: script.ir_fan_power
        data:
          blaster: *blaster
      set_percentage:
      - service: script.ir_fan_speed
        data:
          blaster: *blaster
      set_oscillating:
      - service: script.ir_fan_oscillation
        data:
          blaster: *blaster
      speed_count: 8


binary_sensor:
- platform: template
  sensors:
    xbox:
      value_template: "{{ states('sensor.xbox_ups_load') | float(0) > 5 }}"

    matt_office_fan:
      value_template: "{{ states('sensor.matt_office_fan_plug_energy_power') | float(0) > 10 }}"


sensor:
- platform: template
  sensors:
    in_office_at_night:
      friendly_name: In office at night
      value_template: >
        {{
          (
            is_state('binary_sensor.xbox', 'on') or
            is_state('binary_sensor.desktop', 'on') or
            is_state('light.office', 'on') or
            is_state('light.matt_office_lamps', 'on')
          ) and
          is_state('sun.sun', 'below_horizon')
        }}

- platform: history_stats
  name: Xbox time today
  entity_id: binary_sensor.xbox
  state: 'on'
  type: time
  start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
  end: '{{ now() }}'

- platform: history_stats
  name: Xbox time yesterday
  entity_id: binary_sensor.xbox
  state: 'on'
  type: time
  duration:
    hours: 24
  end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'

- platform: history_stats
  name: Xbox time last 7 days
  entity_id: binary_sensor.xbox
  state: 'on'
  type: time
  duration:
    days: 7
  end: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'