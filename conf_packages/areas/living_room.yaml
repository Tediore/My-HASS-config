automation:
- alias: Android TV unavailable workaround
  id: 'android-tv-workaround'
  initial_state: true
  trigger:
  - platform: state
    entity_id: &lr_tv media_player.living_room_tv
    to: 'unavailable'
    for: '00:15:00'
  action:
  - service: homeassistant.reload_config_entry
    data:
      entry_id: a3b5850bb9171b2954e0f956d24b9109


- alias: Turn off lights and speakers when TV turned on
  id: 'turn_off_lights_speakers_tv_on'
  initial_state: true
  trigger:
  - platform: state
    entity_id: *lr_tv
    to: 'on'
  action:
  - service: script.turn_on
    entity_id: 
    - script.pre_media
    - script.ir_soundbar_vol_up


- alias: Restore lights when TV turned off
  id: 'wuudeaC1Ooyaiphe3uwaPh'
  initial_state: true
  trigger:
  - platform: state
    entity_id: *lr_tv
    from: 'on'
    to: 'off'
  condition:
  - condition: template
    value_template: "{{ states('input_text.alarm') in ['armed_home', 'armed_night', 'disarmed'] }}"
  action:
  - service: light.turn_off
    entity_id: light.living_room_bias_lighting
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'on'
  - condition: state
    entity_id: 
    - &lr_lamps light.living_room_lamps
    - input_boolean.andy_sleep
    - input_boolean.sleep_mode
    state: 'off'
  - service: script.turn_on
    entity_id: script.post_media


light:
- platform: group
  name: Living room lamp right
  entities:
  - light.living_room_lamp_r
  - light.living_room_lamp_r2

- platform: group
  name: Living room overhead
  entities:
  - light.living_room_nw
  - light.living_room_ne
  - light.living_room_e
  - light.living_room_sw
  - light.living_room_se
  - light.living_room_w


script:
  pre_media:
    alias: Turn stuff off when TV turned on
    sequence:
    - condition: state
      entity_id: input_boolean.dark_inside
      state: 'on'
    - service: light.turn_on
      entity_id: light.living_room_bias_lighting
      data:
        transition: 5
        brightness_pct: 100
    - service: media_player.turn_off
      entity_id: media_player.kitchen_speaker
    - condition: state
      entity_id: light.living_room_lamps
      state: 'on'
    - service: light.turn_off
      entity_id:
      - light.living_room_lamps
      - light.buffet
      - light.the_loop
      data:
        transition: 4

  post_media:
    alias: Turn lights back on when TV turned off
    sequence:
    - service: light.turn_on
      data:
        entity_id:
        - light.buffet
        - light.living_room_lamps
        brightness_pct: 100
        color_temp_kelvin: 2200
        transition: 5
    - service: light.turn_on
      entity_id: 
      - light.cabinet_lights
      - light.the_loop
      data:
        brightness_pct: 100
        transition: 5
    - service: light.turn_off
      entity_id: light.living_room_bias_lighting

  ir_soundbar_vol_up:
    sequence:
    - service: mqtt.publish
      data:
        topic: &lr_ir_topic "cmnd/living_room_ir/irsend"
        payload: '{"Protocol":"NEC","Bits":32,"Data":"0x00FF827D"}'

  ir_soundbar_vol_dn:
    sequence:
    - service: mqtt.publish
      data:
        topic: *lr_ir_topic
        payload: '{"Protocol":"NEC","Bits":32,"Data":"0x00FFA25D"}'

  ir_soundbar_pwr_on:
    sequence:
    - service: mqtt.publish
      data:
        topic: *lr_ir_topic
        payload: '{"Protocol":"NEC","Bits":32,"Data":"0x0XFF02FD"}'


fan:
- platform: template
  fans:
    living_room:
      friendly_name: Living room fan
      unique_id: 'living-room-fan'
      value_template: "{{ states('sensor.living_room_fan_plug_energy_power') | float(0) > 10 }}"
      percentage_template: 12.5
      oscillating_template: True
      turn_on:
      - condition: "{{ states('sensor.living_room_fan_plug_energy_power') | float(0) < 10 }}"
      - service: script.ir_fan_power
        data:
          blaster: &blaster living_room_ir
      turn_off:
      - condition: "{{ states('sensor.living_room_fan_plug_energy_power') | float(0) > 10 }}"
      - service: script.ir_fan_power
        data:
          blaster: *blaster
      set_percentage:
      - service: script.ir_fan_speed
        data:
          blaster: *blaster
      set_oscillating:
      - service: script.ir_fan_oscillation
        data:
          blaster: *blaster
      speed_count: 8