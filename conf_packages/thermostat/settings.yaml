script:
  tstat_away:
    sequence:
    - service: climate.set_temperature
      entity_id: climate.thermostat
      data:
        temperature: "{{ states('input_number.tstat_away_' + states('climate.thermostat')) }}"


input_number:
  tstat_away_cool:
    name: Away temp - cool
    min: 75
    max: 82
    step: 1
    mode: slider

  tstat_away_heat:
    name: Away temp - heat
    min: 63
    max: 70
    step: 1
    mode: slider


sensor:
- platform: template
  sensors:
    tstat_mode:
      friendly_name: "HVAC"
      value_template: >
        {% set state = states('climate.thermostat') %}
        {% if state in ['heat', 'cool', 'off'] %}
          {{ state.capitalize() }}
        {% else %}
          -
        {% endif %}
    
    tstat_profile:
      friendly_name: Profile
      value_template: >
        {% set setpoint = state_attr('climate.thermostat', 'temperature') | int(0) %}
        {% set mode = states('climate.thermostat') %}
        {% set cool_home = 74 %}
        {% set cool_sleep = 68 %}
        {% set cool_away = 79 %}
        {% set heat_home = 69 %}
        {% set heat_sleep = 66 %}
        {% set heat_away = 65 %}
        {% if is_state('input_boolean.tstat_hold', 'on') %}
          Hold
        {% elif is_state('input_boolean.tstat_window_off', 'on') %}
          Window
        {% elif is_state('input_boolean.tstat_peak_savings', 'on') %}
          PTS
        {% elif is_state('input_boolean.tstat_smart', 'on') %}
          Smart
        {% elif setpoint in [cool_home, heat_home] %}
          Home
        {% elif setpoint in [cool_sleep, heat_sleep] %}
          Sleep
        {% elif setpoint in [cool_away, heat_away] %}
          Away
        {% elif is_state('sensor.tstat_setpoint', '-') %}
          -
        {% elif is_state('climate.thermostat', 'off') %}
          Off
        {% else %}
          Other
        {% endif %}
    
    tstat_current_temp:
      friendly_name: "Inside"
      value_template: "{{ states('sensor.thermostat_current_temperature') | float('-') | round(1) }}"
      unit_of_measurement: '°F'
    
    tstat_current_humidity:
      friendly_name: "Humidity"
      value_template: "{{ state_attr('climate.thermostat','current_humidity') | float('-') | round(0) }}"
      unit_of_measurement: '%'
    
    tstat_setpoint:
      friendly_name: "Setpoint"
      value_template: "{{ state_attr('climate.thermostat','temperature') | float('-') | round(0) }}"
      unit_of_measurement: '°F'

    tstat_status:
      friendly_name: Thermostat
      value_template: >-
        {{
          state_attr('climate.thermostat', 'hvac_action').title() 
          + ' (' + states('climate.thermostat').replace('_','/').title() + ') ' 
          + (state_attr('climate.thermostat', 'temperature') | string + ' °F'
          if not is_state('climate.thermostat', 'off') else '')
        }}

input_boolean:
  tstat_hold:
    name: Ignore thermostat schedule
  tstat_sched_resume:
    name: Resume thermostat schedule
  tstat_smart:
  tstat_peak_savings:

input_text:
  tstat_prev_mode:
    name: Previous thermostat mode