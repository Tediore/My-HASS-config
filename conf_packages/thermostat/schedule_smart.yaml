automation:
- alias: Change thermostat state with windows
  id: 'eeCu9yoothielah9Xeiroe'
  initial_state: true
  trigger:
  - platform: state
    entity_id: &windows group.windows
    from: 'off'
    to: 'on'
    for: '00:01:00'
  - platform: state
    entity_id: *windows
    from: 'on'
    to: 'off'
    for: '00:01:00'
  condition:
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  action:
  - choose:
    - conditions:
      - "{{ trigger.to_state.state == 'on' }}"
      - condition: state
        entity_id: &window_bool input_boolean.tstat_window_off
        state: 'off'
      sequence:
      - service: climate.turn_off
        entity_id: climate.thermostat
      - service: input_boolean.turn_on
        entity_id: *window_bool
    default:
    - condition: template
      value_template: "{{ (as_timestamp(now()) - as_timestamp(states('sensor.uptime'))) / 60 > 2 }}"
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.thermostat
        hvac_mode: "{{ states('input_text.tstat_prev_mode') }}"
    - wait_template: "{{ states('climate.thermostat') == states('input_text.tstat_prev_mode') }}"
    - service: button.press
      entity_id: button.thermostat_clear_hold
    - service: input_boolean.turn_off
      entity_id: *window_bool


- alias: Change thermostat mode with exterior temp
  id: 'change-tstat-exterior-temp'
  initial_state: true
  trigger:
  - platform: numeric_state
    id: 'cool'
    entity_id: &temp sensor.outside_temp
    above: 75
  - platform: numeric_state
    id: 'heat'
    entity_id: *temp
    below: 50
  condition:
  - "{{ states('climate.thermostat') != trigger.id }}"
  action:
  - if:
    - condition: state
      entity_id: climate.thermostat
      state:
      - 'heat'
      - 'cool'
    then:
    - service: climate.set_hvac_mode
      entity_id: climate.thermostat
      data:
        hvac_mode: "{{ trigger.id }}"
    else:
    - service: input_text.set_value
      entity_id: input_text.tstat_prev_mode
      data:
        value: "{{ trigger.id }}"


- alias: Record previous thermostat mode
  id: 'OhLoe1Ge6oGo0aiPhoJoo2'
  initial_state: true
  trigger:
  - platform: state
    entity_id: climate.thermostat
    from:
    - 'heat'
    - 'cool'
    to: 'off'
  action:
  - service: input_text.set_value
    entity_id: &prev_mode input_text.tstat_prev_mode
    data:
      value: "{{ trigger.from_state.state }}"


- alias: Resume tstat schedule - set mode
  id: 'Iro8kaedahchux6oki9pee'
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.tstat_sched_resume
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.tstat_peak_savings
    from: 'on'
    to: 'off'
  action:
  - service: script.turn_on
    entity_id: script.tstat_sched_resume


script:
  tstat_smart_resume_cool:
    sequence:
    - condition: state
      entity_id:
      - input_boolean.tstat_window_off
      - input_boolean.tstat_peak_savings
      state: 'off'    
    - condition: state
      entity_id: climate.thermostat
      state:
      - 'off'
      - 'cool'
    - condition: numeric_state
      entity_id: sensor.tstat_current_temp
      above: 77.9
    - condition: numeric_state
      entity_id: sensor.outside_temp
      above: 74.9
    - service: input_text.set_value
      entity_id: input_text.tstat_prev_mode
      data:
        value: 'cool'
    - service: input_boolean.turn_on
      entity_id: input_boolean.tstat_sched_resume

  tstat_sched_resume:
    sequence:
    - service: climate.set_temperature
      entity_id: climate.thermostat
      data:
        temperature: "{{ 65 if is_state('input_text.tstat_prev_mode', 'heat') else 80 }}"
        hvac_mode: "{{ states('input_text.tstat_prev_mode') }}"
    - wait_template: "{{ states('climate.thermostat') == states('input_text.tstat_prev_mode') }}"
    - service: button.press
      entity_id: button.thermostat_clear_hold
    - service: input_boolean.turn_off
      entity_id: input_boolean.tstat_sched_resume

input_boolean:
  tstat_window_off: