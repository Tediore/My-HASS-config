automation:
- alias: Set PTS start/end time
  id: 'gohhohch3Eeloh7rahx2Ai'
  initial_state: true
  trigger:
  - platform: event
    event_type: netgear_lte_sms
#   - platform: mqtt
#     topic: 'sms2mqtt/received'
  condition:
  - "{{ 'ComEd PTS Summer Hours Alert: TODAY' in trigger.event.data.message }}"
#   - "{{ 'ComEd PTS Summer Hours Alert: TODAY' in trigger.payload }}"
  action:
  - service: input_datetime.set_datetime
    entity_id: input_datetime.tstat_peak_savings_start
    data:
      time: >
        {% set payload = trigger.event.data.message %}
        {% set start = payload[payload.find('from') + 5:payload.find(' - ')] %}
        {% set start_hr_12 = start[:start.find(':')] if ':' in start else start[:start.find(' ')] %}
        {% set start_hr_24 = '0' + start_hr_12 if 'am' in start else int(start_hr_12) + 12 %}
        {% set start_min = start[start.find(':'):-3] if ':' in start else ':00' %}
        {{ start_hr_24 ~ start_min ~ ':00' }}
  - service: input_datetime.set_datetime
    entity_id: input_datetime.tstat_peak_savings_end
    data:
      time: >
        {% set payload = trigger.event.data.message %}
        {% set mid = payload[payload.find(' - ') + 3:payload.find('.')] %}
        {% set end_hr_12 = mid[:mid.find(':')] if ':' in mid else mid[:mid.find(' ')] %}
        {% set end_hr_24 = '0' + end_hr_12 if 'am' in mid else int(end_hr_12) + 12 %}
        {% set end_min = mid[mid.find(':'):-3] if ':' in mid else ':00' %}
        {{ end_hr_24 ~ end_min ~ ':00' }}
  - service: input_boolean.turn_on
    entity_id: input_boolean.tstat_peak_savings


- alias: Turn cooling off/on - peak time savings
  id: 'peeThu6ierah4Ineesheeh'
  initial_state: true
  trigger:
  - platform: time
    at:
    - &start input_datetime.tstat_peak_savings_start
    - &end input_datetime.tstat_peak_savings_end
  condition:
  - condition: state
    entity_id:
    - input_boolean.auto_tstat_peak_savings
    - input_boolean.tstat_peak_savings
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: time
        before: *end
      sequence:
      - service: climate.turn_off
        entity_id: climate.thermostat
      - service: input_boolean.turn_on
        entity_id: input_boolean.tstat_peak_savings_active
      - service: notify.gotify
        data:
          title: Peak time savings active
          message: Thermostat has been turned off.
    - conditions:
      - condition: time
        after: *start
      sequence:
      - service: input_boolean.turn_off
        entity_id:
        - input_boolean.tstat_peak_savings
        - input_boolean.tstat_peak_savings_active
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.thermostat
          hvac_mode: "{{ states('input_text.tstat_prev_mode') }}"
      - wait_template: "{{ states('climate.thermostat') == states('input_text.tstat_prev_mode') }}"
      - service: button.press
        entity_id: button.thermostat_clear_hold
      - service: notify.gotify
        data:
          title: Peak time savings over
          message: Thermostat has been turned back on.


input_datetime:
  tstat_peak_savings_start: &tstat_times
    has_date: false
    has_time: true
  tstat_peak_savings_end: *tstat_times


input_boolean:
  auto_tstat_peak_savings:
  tstat_peak_savings:
  tstat_peak_savings_active: