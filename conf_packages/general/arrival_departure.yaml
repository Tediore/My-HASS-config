automation:
- alias: Turn lights on upon entrance
  id: 'vei6Ilae0mooZohyaisaix'
  initial_state: true
  trigger:
  - entity_id: binary_sensor.front_door
    id: front_door
    platform: state
    to: 'on'
  - entity_id: binary_sensor.back_door
    id: back_door
    platform: state
    to: 'on'
  condition:
  - condition: or
    conditions: &dark_inside
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
    - condition: state
      entity_id: input_boolean.dark_inside
      state: 'on'
  - condition: or
    conditions:
    - condition: state
      entity_id: input_text.alarm
      state: 'armed_away'
      for: '00:00:30'
    - condition: state
      entity_id: input_boolean.arrival_night
      state: 'on'
  action:
  - service: light.turn_on
    data:
      entity_id: "light.{{ 'front_door_lights' if trigger.id == 'front_door' else 'hall_lights' }}"
      brightness_pct: 67
      color_temp_kelvin: 2000
  - service: script.turn_on
    entity_id: script.arrival_night


- alias: Turn on arrival boolean when arriving at night
  id: 'arrival-bool-on-night-arrival'
  initial_state: true
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_door
    - binary_sensor.back_door
    to: 'on'
  condition:
  - condition: or
    conditions: *dark_inside
  - condition: state
    entity_id: input_text.alarm
    state: 'armed_away'
    for: '00:00:30'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.arrival_night


- alias: Alarm disarmed from away
  id: 'luheechourei9Lowie2mui'
  initial_state: true
  trigger:
  - platform: state
    entity_id: &alarm input_text.alarm
    from: 'armed_away'
    to: 'disarmed'
  action:
  - service: homeassistant.turn_on
    entity_id:
    - script.tstat_smart_resume_cool
    - script.arrival_night
  - condition: or
    conditions: *dark_inside
  - service: input_boolean.turn_on
    entity_id: input_boolean.arrival_night


- alias: Turn arrival boolean and entrance lights off after disarmed
  id: 'arrival-boolean-off-disarmed'
  initial_state: true
  trigger:
  - platform: state
    entity_id: *alarm
    from: 'armed_away'
    to: 'disarmed'
    for: '00:02:00'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.arrival_night
  - service: light.turn_off
    entity_id:
    - light.front_door_lights
    - light.hall_lights


- alias: Activate away mode when armed away
  id: 'Del1UJaejeiK2eiy1goo9s'
  initial_state: true
  trigger:
  - platform: state
    entity_id: *alarm
    to: 'armed_away'
    for: '00:00:05'
  action:
  - service: script.turn_on
    entity_id: script.away_mode


- alias: Enable/disable leaving boolean
  id: 'leaving-boolean'
  initial_state: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.home
    to:
    - 'arming'
    - 'disarmed'
  - platform: state
    entity_id: input_boolean.leaving
    to: 'on'
    for: '00:03:00'
  action:
  - service: "input_boolean.turn_{{ 'on' if trigger.to_state.state == 'arming' else 'off' }}"
    entity_id: input_boolean.leaving


script:
  away_mode:
    sequence:
    - service: homeassistant.turn_off
      target: 
        entity_id: "group.{{ 'lights_interior' if is_state('input_boolean.dark_inside', 'off') else 'select_lights_interior' }}"
    - service: homeassistant.turn_off
      target:
        entity_id:
        - light.front_door_lights
        - group.plugs
        - fan.living_room
        - fan.matt_office
        - switch.bedroom_fan
    - service: media_player.turn_off
      entity_id: all
    - service: script.turn_on
      entity_id: script.christmas_lights_off
    - service: script.turn_on
      data:
        entity_id: "{{ 'script.lights_kitty' if is_state('input_boolean.dark_inside', 'on') else none }}"
    - condition: template
      value_template: "{{ not is_state('climate.thermostat', 'off') }}"
    - condition: state
      entity_id: climate.thermostat
      attribute: hvac_action
      state: 'idle'
    - condition: state
      entity_id:
      - input_boolean.tstat_hold
      - input_boolean.tstat_away
      state: 'off'
    - service: script.turn_on
      entity_id: script.tstat_away

  
  arrival_night:
    sequence:
    - condition: state
      entity_id: input_boolean.dark_inside
      state: 'on'
    - service: script.turn_on
      data:
        entity_id: script.lights_normal
  

  lights_normal:
    sequence:
    - service: light.turn_on
      entity_id:
      - light.living_room_lamps
      - light.buffet
      data:
        transition: 1
        brightness_pct: 100
        color_temp_kelvin: 2700
    - if:
      - "{{ is_state('light.christmas_tree', 'off') }}"
      then:
      - service: light.turn_on
        entity_id: light.christmas_tree
        data:
          brightness_pct: 100
    - service: light.turn_on
      entity_id:
      - light.cabinet_lights
      - light.hall_bath_night_light
      - light.main_bath_night_light
      data:
        brightness_pct: 100
        color_temp_kelvin: 2700
        transition: 1
    - service: light.turn_on
      entity_id: light.hall_light_bar
      data:
        white: true
        brightness_pct: 100
        transition: 1


  lights_christmas:
    sequence:
    - service: script.turn_on
      entity_id: script.lights_normal
    - service: homeassistant.turn_on
      entity_id: 
      - light.christmas_tree


  lights_kitty:
    sequence:
    - service: light.turn_on
      entity_id:
      - light.buffet
      - light.living_room_lamps
      data:
        brightness_pct: 20
        color_temp_kelvin: 2700


  window_notify:
    sequence:
    - condition: state
      entity_id: group.windows
      state: 'on'
    - service: notify.mobile_app_matt_phone
      data:
        title: The following windows are open
        message: >
          {% for window in expand('group.windows') if window.state == 'off' -%}
          {{ window.name }}{% if not loop.last %}, {% endif %}
          {%- endfor %}
        data:
          ttl: 0
          priority: high


group:
  plugs:
    entities:
    - switch.andy_office_plug


binary_sensor:
- platform: template
  sensors:
    any_speaker:
      friendly_name: Any speaker
      value_template: >
        {% set rejects = ['off', 'unavailable'] %}
        {% set speakers = [
          states('media_player.bedroom_speaker') not in rejects, 
          states('media_player.living_room_speaker') not in rejects, 
          states('media_player.kitchen_speaker') not in rejects,
          states('media_player.andy_office_hub') not in rejects,
          states('media_player.office_speaker') not in rejects,
          states('media_player.guest_bedroom_clock') not in rejects
          ] %}
        {{ speakers | sum > 0 }}

    any_tv:
      friendly_name: Any TV
      value_template: >
        {% set rejects = ['off', 'unavailable'] %}
        {% set tvs = [
          states('media_player.craft_room_tv') not in rejects,
          states('media_player.bedroom_tv') not in rejects, 
          states('media_player.living_room_vizio') not in rejects 
          ] %}
        {{ tvs | sum > 0 }}


input_boolean:
  arrival_night:
  leaving:
    initial: false