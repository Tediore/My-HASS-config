# automation:
# - alias: Repeat white noise in sleep mode - workday
#   id: 'repeat-white-noise-workday'
#   initial_state: true
#   trigger:
#   - platform: state
#     entity_id: &bedroom_speaker media_player.bedroom_speaker
#     from: 'playing'
#     to:
#     - 'idle'
#     - 'off'
#   condition:
#   - condition: state
#     entity_id:
#     - input_boolean.white_noise
#     - binary_sensor.workday
#     state: 'on'
#   action:
#   - service: media_player.play_media
#     data:
#       entity_id: "{{ trigger.to_state.entity_id }}"
#       media_content_id: >
#         {% set url = 'http://10.0.1.2:3453/audio/white_noise' %}
#         {% set ext = '.mp3' %}
#         {% set time = now().strftime('%H%M') | int %}
#         {% if time < 600 or time > 2000 %}
#           {% set file = '' %}
#         {% elif time < 615 %}
#           {% set file = '_45m' %}
#         {% elif time < 630 %}
#           {% set file = '_30m' %}
#         {% else %}
#           {% set file = '_15m' %}
#         {% endif %}
#         {{ url + file + ext }}
#       # media_content_id: >
#       #   {% set url = 'http://10.0.1.2:3453/audio/ac_noise' %}
#       #   {% set ext = '.mp3' %}
#       #   {% set time = now().strftime('%H%M') | int %}
#       #   {% if time < 615 %}
#       #     {% set file = '_45m' %}
#       #   {% elif time < 630 %}
#       #     {% set file = '_30m' %}
#       #   {% else %}
#       #     {% set file = '_15m' %}
#       #   {% endif %}
#       #   {{ url + file + ext }}
#       media_content_type: audio/mp3
#   - if:
#     - condition: time
#       after: '05:40:00'
#       before: '08:00:00'
#     then:
#     - service: input_boolean.turn_off
#       entity_id: input_boolean.white_noise
#     - condition: state
#       entity_id: &humidifier switch.humidifier
#       state: 'on'
#     - service: switch.turn_off
#       entity_id: *humidifier


# - alias: Repeat white noise in sleep mode - weekend
#   id: 'repeat-white-noise-weekend'
#   initial_state: true
#   trigger:
#   - platform: state
#     entity_id: media_player.bedroom_speaker
#     from: 'playing'
#     to: 'idle'
#   condition:
#   - condition: state
#     entity_id: input_boolean.white_noise
#     state: 'on'
#   - condition: state
#     entity_id: binary_sensor.workday
#     state: 'off'
#   action:
#   - service: media_player.play_media
#     data:
#       entity_id: "{{ trigger.to_state.entity_id }}"
#       media_content_id: >
#         {% set url = 'http://10.0.1.2:3453/audio/white_noise' %}
#         {% set ext = '.mp3' %}
#         {% set time = now().strftime('%H%M') | int %}
#         {% if time < 645 or time > 2000 %}
#           {% set file = '' %}
#         {% elif time < 700 %}
#           {% set file = '_45m' %}
#         {% elif time < 715 %}
#           {% set file = '_30m' %}
#         {% else %}
#           {% set file = '_15m' %}
#         {% endif %}
#         {{ url + file + ext }}
#       # media_content_id: >
#       #   {% set url = 'http://10.0.1.2:3453/audio/ac_noise' %}
#       #   {% set ext = '.mp3' %}
#       #   {% set time = now().strftime('%H%M') | int %}
#       #   {% if time < 700 %}
#       #     {% set file = '_45m' %}
#       #   {% elif time < 715 %}
#       #     {% set file = '_30m' %}
#       #   {% else %}
#       #     {% set file = '_15m' %}
#       #   {% endif %}
#       #   {{ url + file + ext }}
#       media_content_type: audio/mp3
#   - if:
#     - condition: time
#       after: '05:40:00'
#       before: '08:00:00'
#     then:
#     - service: input_boolean.turn_off
#       entity_id: input_boolean.white_noise
#     - condition: state
#       entity_id: *humidifier
#       state: 'on'
#     - service: switch.turn_off
#       entity_id: *humidifier


# - alias: Turn bedroom fan on after Andy's button pressed
#   initial_state: true
#   trigger:
#   - platform: state
#     entity_id: input_boolean.andy_sleep
#     to: 'on'
#     for: '00:20:00'
#   action:
#   - service: switch.turn_on
#     entity_id: switch.bedroom_fan


script:
  good_night:
    alias: Good night
    sequence:
    - service: homeassistant.turn_on
      entity_id: 
      - input_boolean.sleep_mode
      - input_boolean.andy_sleep
      # - script.white_noise_bedroom
      - script.lights_off_interior
      - script.christmas_lights_off
      - script.media_players_off
      - switch.bedroom_fan
      - script.transit_display_off
    - service: homeassistant.turn_off
      entity_id:
      - input_boolean.washer
      - input_boolean.dryer
      - fan.living_room
    - service: light.turn_on
      entity_id: light.main_bath_night_light
      data:
        brightness_pct: 10
    - service: light.turn_on
      entity_id: light.patio_lights
      data:
        brightness_pct: 5
    # - service: shell_command.bedroom_powerline_leds_off
    - if:
      - "{{ is_state('alarm_control_panel.home', 'disarmed') }}"
      - "{{ is_state('input_boolean.overnight_guest', 'off') }}"
      then:
      - service: alarm_control_panel.alarm_arm_night
        data:
          entity_id: alarm_control_panel.home
          code: !secret alarm_code_system
    - if:
      - "{{ is_state('switch.humidifier', 'off') }}"
      then:
      - service: switch.turn_on
        entity_id: switch.humidifier

  good_night_andy:
    sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.andy_sleep
    - service: script.turn_on
      entity_id: script.white_noise_bedroom
    - service: homeassistant.turn_off
      target:
        entity_id:
        - switch.pole_light
        - light.hallway
        - light.bedroom_lamps
        - light.main_bedroom_fan
        - light.craft_room
        - light.tea_lights
        - media_player.bedroom_tv
        - group.lights_christmas
    - service: light.turn_on
      entity_id: light.main_bath_night_light
      data:
        brightness_pct: 10
    - if:
      - "{{ is_state('alarm_control_panel.home', 'disarmed') }}"
      - "{{ is_state('input_boolean.overnight_guest', 'off') }}"
      then:
      - service: alarm_control_panel.alarm_arm_night
        data:
          entity_id: alarm_control_panel.home
          code: !secret alarm_code_system
    - if:
      - "{{ is_state('switch.humidifier', 'off') }}"
      then:
      - service: switch.turn_on
        entity_id: switch.humidifier

  media_players_off:
    sequence:
    - service: media_player.turn_off
      entity_id:
      # - media_player.living_room_speaker
      - media_player.office_speaker
      # - media_player.hub
      - media_player.kitchen_speaker

  lights_off_interior:
    sequence:
    - service: homeassistant.turn_off
      data:
        entity_id: "group.lights_interior{{ '' if is_state('input_boolean.overnight_guest', 'off') else '_overnight_guest' }}"

  christmas_lights_off:
    sequence:
    - condition: state
      entity_id: light.christmas_lights
      state: 'on'
    - service: light.turn_off
      entity_id: light.christmas_lights

  transit_display_off:
    sequence:
    - service: rest_command.tasker
      data:
        ip_address: 10.0.4.246
        port: 1821
        path: home_assistant
        event:
                {
                'device_id':'display_off',
                'device_name':'Display Off'
              }

  # good_night_no_noise:
  #   alias: Good night routine - no white noise
  #   sequence:
  #   - service: script.turn_on
  #     entity_id: 
  #     - script.christmas_lights_off
  #     - script.lights_off_interior
  #   - service: switch.turn_on
  #     entity_id: switch.main_bedroom_fan
  #   - service: input_boolean.turn_on
  #     entity_id: input_boolean.sleep_mode
  #   - if:
  #     - "{{ is_state('alarm_control_panel.home', 'disarmed') }}"
  #     - "{{ is_state('input_boolean.overnight_guest', 'off') }}"
  #     then:
  #     - service: alarm_control_panel.alarm_arm_night
  #       data:
  #         entity_id: alarm_control_panel.home
  #         code: !secret alarm_code_system
  #   - if:
  #     - "{{ is_state('switch.humidifier', 'off') }}"
  #     then:
  #     - service: switch.turn_on
  #       entity_id: switch.humidifier

  # white_noise_bedroom:
  #   alias: Play white noise on bedroom speaker
  #   sequence:
  #   - service: input_boolean.turn_on
  #     entity_id: input_boolean.white_noise
  #   - service: media_player.volume_mute
  #     entity_id: *bedroom_speaker
  #     data:
  #       is_volume_muted: true
  #   - service: media_player.turn_on
  #     entity_id: *bedroom_speaker
  #   - service: media_player.play_media
  #     entity_id: *bedroom_speaker
  #     data:
  #       media_content_id: 'http://10.0.1.2:3453/audio/silence.mp3'
  #       media_content_type: audio/mp3
  #   - delay: '00:00:02'
  #   - service: media_player.volume_set
  #     entity_id: *bedroom_speaker
  #     data:
  #       volume_level: "{{ states('input_number.white_noise_vol') | int(0) / 100 }}"
  #   - delay: '00:00:02'
  #   - service: media_player.play_media
  #     entity_id: *bedroom_speaker
  #     data:
  #       media_content_id: http://10.0.1.2:3453/audio/white_noise.mp3
  #       # media_content_id: http://10.0.1.2:3453/audio/ac_noise_45m.mp3
  #       media_content_type: audio/mp3
  #   - wait_template: "{{ is_state('*bedroom_speaker', 'playing') }}"
  #     timeout: '00:00:10'
  #     continue_on_timeout: true
  #   - service: media_player.volume_mute
  #     entity_id: *bedroom_speaker
  #     data:
  #       is_volume_muted: false

  # white_noise_speaker:
  #   alias: Play white noise on selected speaker
  #   sequence:
  #   - service: input_boolean.turn_on
  #     entity_id: input_boolean.white_noise
  #   - service: media_player.volume_mute
  #     data:
  #       entity_id: &speaker "{{ speaker }}"
  #       is_volume_muted: true
  #   - service: media_player.turn_on
  #     data:
  #       entity_id: *speaker
  #   - service: media_player.play_media
  #     data:
  #       entity_id: *speaker
  #       media_content_id: 'http://10.0.1.2:3453/audio/silence.mp3'
  #       media_content_type: audio/mp3
  #   - delay: '00:00:02'
  #   - service: media_player.volume_set
  #     data:
  #       entity_id: *speaker
  #       volume_level: "{{ states('input_number.white_noise_vol') | int(0) / 100 }}"
  #   - delay: '00:00:02'
  #   - service: media_player.play_media
  #     data:
  #       entity_id: *speaker
  #       media_content_id: !secret white_noise
  #       media_content_type: audio/mp3
  #   - wait_template: "{{ is_state('*bedroom_speaker', 'playing') }}"
  #     timeout: '00:00:10'
  #     continue_on_timeout: true
  #   - service: media_player.volume_mute
  #     data:
  #       entity_id: *speaker
  #       is_volume_muted: false


# input_number:
#   white_noise_vol:
#     name: White noise volume
#     min: 20
#     max: 80
#     step: 2
#     unit_of_measurement: '%'
#     mode: slider


input_boolean:
  sleep_mode:
  andy_sleep:
  # white_noise: