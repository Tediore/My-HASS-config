automation:
- alias: Turn entrance light on upon entrance
  id: 'vei6Ilae0mooZohyaisaix'
  initial_state: true
  trigger:
  - entity_id: 
    - binary_sensor.front_door
    - binary_sensor.front_storm_door
    - binary_sensor.side_door
    - binary_sensor.side_storm_door
    platform: state
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
    - condition: state
      entity_id: input_boolean.dark_inside
      state: 'on'
  - condition: state
    entity_id: alarm_control_panel.home
    state: 'armed_away'
    for: '00:00:30'
  action:
  - service: switch.turn_on
    entity_id: switch.side_entrance_light
  - service: light.turn_on
    entity_id: light.entrance
    data:
      brightness_pct: "{{ 100 if 6 < now().hour < 22 else 66 }}"
  - service: script.turn_on
    entity_id: script.arrival_night


- alias: Alarm disarmed from away
  id: 'luheechourei9Lowie2mui'
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.alarm
    from: 'armed_away'
    to: 'disarmed'
  action:
  - service: homeassistant.turn_on
    entity_id:
    - script.entrance_light_on
    - script.tstat_smart_resume_cool
    - script.arrival_night


- alias: Activate away mode when armed away
  id: 'Del1UJaejeiK2eiy1goo9s'
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.alarm
    to: 'armed_away'
    for: '00:00:05'
  action:
  - service: script.turn_on
    entity_id: script.away_mode
  - delay: '00:00:05'
  - condition: or
    conditions:
    - condition: state
      entity_id: sensor.tstat_profile
      state: 
      - 'Away'
      - 'Hold'
      - 'PTS'
      - 'Smart'
    - condition: state
      entity_id: climate.thermostat
      state: 'off'
  - condition: state
    entity_id: group.lights_all
    state: 'off'
  - service: script.notify_away
    data:
      title: Away mode activated


- alias: Away mode backup attempt
  id: 'xooco5teb6bi9yaJeeth5P'
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.alarm
    to: 'armed_away'
    for: '00:00:35'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: group.lights_interior
      state: 'on'
    - condition: state
      entity_id: binary_sensor.any_speaker
      state: 'on'
    - condition: state
      entity_id: binary_sensor.any_tv
      state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.away_mode
  - delay: '00:00:05'
  - condition: state
    entity_id: group.lights_interior
    state: 'off'
  - condition: state
    entity_id: binary_sensor.any_speaker
    state: 'off'
  - condition: state
    entity_id: binary_sensor.any_tv
    state: 'off'
  - service: script.notify_away
    data:
      title: Away mode activated (second attempt)


script:
  away_mode:
    sequence:
    - service: homeassistant.turn_off
      target: 
        entity_id: "group.{{ 'lights_interior' if is_state('input_boolean.dark_inside', 'off') else 'select_lights_interior' }}"
    - service: homeassistant.turn_off
      target:
        entity_id: group.plugs
    - service: media_player.turn_off
      entity_id: all
    - service: script.turn_on
      entity_id: 
      - script.lr_fan_off
      - script.christmas_lights_off
    - service: script.turn_on
      data:
        entity_id: "{{ 'script.lights_kitty' if is_state('input_boolean.dark_inside', 'on') else none }}"
    - condition: template
      value_template: "{{ not is_state('climate.thermostat', 'off') }}"
    - condition: state
      entity_id: climate.thermostat
      attribute: hvac_action
      state: 'idle'
    - condition: state
      entity_id:
      - input_boolean.tstat_hold
      - input_boolean.tstat_away
      state: 'off'
    - service: script.turn_on
      entity_id: script.tstat_away


  notify_away:
    sequence:
    - service: notify.mobile_app_matt_phone
      data_template:
        title: "{{ title }}"
        message: >
          {% set tstat = states('sensor.tstat_profile') %}
          {% set action = states('sensor.hvac_action') %}
          {% if tstat in ['Off', 'Away'] %}
            Lights are off, thermostat is {{ 'off' if tstat == 'off' else 'set to away' }}.
          {% elif action != 'idle' %}
            Lights are off.
          {% else %}
            Uhh... this shouldn't be possible.
          {% endif %}
        data:
          ttl: 0
          priority: high
  
  
  entrance_light_on:
    sequence:
    - condition: or
      conditions:
      - condition: state
        entity_id: input_boolean.dark_inside
        state: 'on'
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
    - service: switch.turn_on
      entity_id: switch.side_entrance_light
    - delay: '00:01:00'
    - service: switch.turn_off
      entity_id: switch.side_entrance_light

  
  arrival_night:
    sequence:
    - condition: state
      entity_id: input_boolean.dark_inside
      state: 'on'
    - service: script.turn_on
      data:
        entity_id: script.lights_normal
  

  lights_normal:
    sequence:
    - service: light.turn_on
      entity_id:
      - light.entrance
      - light.buffet
      - light.hallway
      - light.living_room_lamps
      data:
        transition: 1
        brightness_pct: "{{ 100 if now().hour > 6 or now().hour < 21 else 66 }}"
        kelvin: 2700
    - if:
      - "{{ is_state('light.christmas_tree', 'off') }}"
      then:
      - service: light.turn_on
        entity_id: light.christmas_tree
        data:
          brightness_pct: 100
    - service: light.turn_on
      entity_id:
      - light.cabinet_lights_dimmer
      - light.hall_bath_night_light
      - light.master_bath_night_light
      data:
        brightness_pct: 100
        kelvin: 2700
        transition: 1


  lights_christmas:
    sequence:
    - service: script.turn_on
      entity_id: script.lights_normal
    - service: homeassistant.turn_on
      entity_id: 
      - light.christmas_tree


  lights_kitty:
    sequence:
    - service: light.turn_on
      entity_id:
      - light.buffet
      - light.hallway
      - light.living_room_lamps
      data:
        brightness_pct: 20
        kelvin: 2700


  window_notify:
    sequence:
    - condition: state
      entity_id: group.windows
      state: 'on'
    - service: notify.mobile_app_matt_phone
      data:
        title: The following windows are open
        message: >
          {% for window in expand('group.windows') if window.state == 'off' -%}
          {{ window.name }}{% if not loop.last %}, {% endif %}
          {%- endfor %}
        data:
          ttl: 0
          priority: high


  lr_fan_off:
    sequence:
    - condition: state
      entity_id: &lr_fan switch.living_room_fan
      state: 'on'
    - service: switch.turn_off
      entity_id: *lr_fan


binary_sensor:
- platform: template
  sensors:
    any_speaker:
      friendly_name: Any speaker
      value_template: >
        {% set rejects = ['off', 'unavailable'] %}
        {% set speakers = [
          states('media_player.bedroom_speaker') not in rejects, 
          states('media_player.living_room_speaker') not in rejects, 
          states('media_player.kitchen_speaker') not in rejects,
          states('media_player.craft_room_speaker') not in rejects,
          states('media_player.office_speaker') not in rejects,
          states('media_player.guest_bedroom_clock') not in rejects
          ] %}
        {{ speakers | sum > 0 }}

    any_tv:
      friendly_name: Any TV
      value_template: >
        {% set rejects = ['off', 'unavailable'] %}
        {% set tvs = [
          states('media_player.craft_room_tv') not in rejects,
          states('media_player.bedroom_tv') not in rejects, 
          states('media_player.living_room_vizio') not in rejects 
          ] %}
        {{ tvs | sum > 0 }}