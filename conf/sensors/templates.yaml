- platform: template
  sensors:
    space_heater_action:
      friendly_name: "Space heater action"
      value_template: "{{ state_attr('climate.space_heater', 'hvac_action') }}"
    
    space_heater_runtime_today:
      friendly_name: "Space heater runtime today"
      value_template: "{{ states('sensor.space_heater_time_today') | float | round(1) }}"
      unit_of_measurement: 'h'
    
    space_heater_runtime_yesterday:
      friendly_name: "Space heater runtime yesterday"
      value_template: "{{ states('sensor.space_heater_time_yesterday') | float | round(1) }}"
      unit_of_measurement: 'h'
    
    space_heater_runtime_week:
      friendly_name: "Space heater runtime last 7 days"
      value_template: "{{ states('sensor.space_heater_time_last_7_days') | float | round(1) }}"
      unit_of_measurement: 'h'
    
    outside_temp_darksky:
      friendly_name: "Outside"
      value_template: "{{ state_attr('weather.dark_sky', 'temperature') | float('-') | round(0) }}"
      unit_of_measurement: '°F'

    outside_temp_display:
      friendly_name: "Outside"
      value_template: "{{ states('sensor.outside_temp') | round(0) | int }}"
      unit_of_measurement: '°F'

    outside_humidity_darksky:
      friendly_name: "Outside"
      value_template: "{{ 50 if is_state('weather.dark_sky', 'unavailable') else state_attr('weather.dark_sky', 'humidity') | round(0) }}"
      unit_of_measurement: '%'
    
    dewpoint_outside_display:
      friendly_name: "Dew point"
      value_template: "{{ states('sensor.dewpoint_outside') | float | round(0) }}"
      unit_of_measurement: '°F'

    dewpoint_inside_display:
      friendly_name: "Dew point"
      value_template: "{{ states('sensor.dewpoint_inside') | float | round(0) }}"
      unit_of_measurement: '°F'
    
    master_bedroom_temp_calibrated:
      friendly_name: Master bedroom temp calibrated
      value_template: >
        {% if is_state('sensor.master_bedroom_temp', 'unavailable') %}
          {{ states('sensor.tstat_current_temp') }}
        {% else %}
          {{ (states('sensor.master_bedroom_temp') | float + states('input_number.master_bedroom_temp_offset') | float) | round(1) }}
        {% endif %}
      unit_of_measurement: '°F'
    
    master_bedroom_temp_calibrated_display:
      friendly_name: Master bedroom temp calibrated
      value_template: >
        {% if is_state('sensor.master_bedroom_temp', 'unavailable') %}
          -
        {% else %}
          {{ (states('sensor.master_bedroom_temp') | float + states('input_number.master_bedroom_temp_offset') | float) | round(0) }} °F
        {% endif %}
    
    game_room_temp_calibrated:
      friendly_name: Game room temp calibrated
      value_template: >
        {% if is_state('sensor.game_room_temp', 'unavailable') %}
          {{ states('input_number.game_room_temp') }}
        {% else %}
          {{ (states('sensor.game_room_temp') | float + states('input_number.game_room_temp_offset') | float) | round(1) }}
        {% endif %}
      unit_of_measurement: '°F'
    
    game_room_temp_calibrated_display:
      friendly_name: Game room temp calibrated
      value_template: >
        {% if is_state('sensor.game_room_temp', 'unavailable') %}
          {{ states('input_number.game_room_temp') }}
        {% else %}
          {{ (states('sensor.game_room_temp') | float + states('input_number.game_room_temp_offset') | float) | round(0) }} °F
        {% endif %}

    avg_temp_master_bedroom:
      friendly_name: Master bedroom
      value_template: "{{ ((states('sensor.button_matt_temp') | float + states('sensor.button_andy_temp') | float) / 2) | round(0) }}"
      unit_of_measurement: '°F'

    ssd_temp_disp:
      friendly_name: SSD temp
      value_template: "{{ states('sensor.ssd_temp') }} °C"