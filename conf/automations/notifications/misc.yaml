- alias: Suggest opening the windows  # throttled - 8 hours
  id: 'thaitheePuo3ohv8'
  initial_state: true
  trigger:
    platform: template
    value_template: "{{ (states('sensor.tstat_current_temp') | float(0) - states('sensor.outside_temp') | float(0)) > 9 }}"
  condition:
  - condition: template
    value_template: "{{ (as_timestamp(now()) - as_timestamp(state_attr('automation.suggest_opening_the_windows', 'last_triggered'))) / 3600 > 8 }}"
  - condition: state
    entity_id: climate.thermostat
    state: 'cool'
  - condition: numeric_state
    entity_id: sensor.outside_dewpoint
    below: 58
  - condition: template
    value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
  - condition: state
    entity_id: input_boolean.sleep_mode
    state: 'off'
  action:
  - service: notify.gotify
    data_template:
      title: "Consider opening the windows"
      message: "It's {{ states('sensor.tstat_current_temp') | float(0) | round(0) | int(0) }}° inside and only {{ states('sensor.outside_temp') | float(0) | round(0) | int(0) }}° outside."


- alias: Notify when server CPU hot
  id: 'Wievoh1ii0phodei'
  initial_state: true
  trigger:
  - platform: template
    value_template: "{{ states('sensor.server_cpu_temp') | int(0) > 80 }}"
    for: '00:05:00'
  action:
  - service: notify.gotify_high
    data:
      title: "Server CPU temperature elevated"
      message: "CPU temperature has been above 80 °C for more than five minutes."


- alias: Notify when humidity rising quickly
  id: 'alie4ciek7ingu6O'
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.dewpoint_inside
    from: 'off'
    to: 'on'
    for: '00:20:00'
  - platform: numeric_state
    entity_id: sensor.dewpoint_inside
    above: 55
  condition:
  - condition: numeric_state
    entity_id: sensor.dewpoint_inside
    above: 55
  - condition: state
    entity_id: binary_sensor.dewpoint_inside
    state: 'on'
    for: '00:20:00'
  - condition: state
    entity_id: input_boolean.sleep_mode
    state: 'off'
  action:
  - service: notify.gotify
    data:
      title: "Humidity rising quickly"
      message: "The indoor dew point is rising rapidly."


- alias: Notify when Home Assistant starts
  id: 'yo9Ju1Au6daePhaH'
  trigger:
    platform: homeassistant
    event: start
  action:
  - service: notify.gotify
    data_template:
      title: "Home Assistant started"
  - wait_template: "{{ is_state('persistent_notification.config_entry_discovery', 'notifying') }}"
    timeout: "00:01:00"
    continue_on_timeout: false
  - service: persistent_notification.dismiss
    data:
      notification_id: config_entry_discovery


- alias: Birthday reminder
  id: 'seigoKush3DohW5w'
  initial_state: true
  trigger:
  - platform: state
    entity_id: calendar.birthdays
    from: 'off'
    to: 'on'
  action:
  - service: notify.gotify
    data_template:
      title: "{{ state_attr('calendar.birthdays', 'message') }} is today!"
      message: Don't forget to say happy birthday!


- alias: Dismiss discovery notification
  id: 'mieGhe9xai9lieco'
  initial_state: true
  trigger:
    platform: state
    entity_id: persistent_notification.config_entry_discovery
    to: 'notifying'
  action:
    service: persistent_notification.dismiss
    data:
      notification_id: config_entry_discovery


- alias: Notify if IPv6 address changes
  id: 'ahRau6IuquahTh1n'
  initial_state: true
  trigger:
  - platform: state
    entity_id: sensor.server_ipv6_address
  condition:
  - condition: template
    value_template: "{{ trigger.to_state.state != '' and trigger.from_state.state != '' }}"
  action:
  - service: notify.gotify
    data:
      title: "Server IPv6 address changed"
      message: "Check Home Assistant for details."
  - service: persistent_notification.create
    data_template:
      title: "Server IPv6 address changed"
      message: "IPv6 address is now {{ states('sensor.server_ipv6_address') }}."


- alias: Record internet outage
  id: 'WooWir8etaithoaz'
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.internet
    from: 
    - 'on'
    - 'off'
    to: 
    - 'off'
    - 'on'
    for: '00:00:40'
  action:
  - service_template: "input_boolean.turn_{{ trigger.to_state.state }}"
    entity_id: input_boolean.internet


- alias: Notify when internet out/restored
  id: 'quei5bohN1Ue0rip'
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.internet
  action:
  - service: script.sms_send
    data_template:
      number: !secret phone_matt
      message: "Internet connection {{ 'lost' if trigger.to_state.state == 'off' else 'restored' }}."