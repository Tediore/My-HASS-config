- alias: Turn lights on/off at sunset/sunrise if home
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.dark_inside
  condition:
  - condition: template
    value_template: "{{ states('alarm_control_panel.abode') in ['armed_home', 'disarmed'] }}"
  action:
  - service_template: "script.lights_{{ 'sunset' if trigger.to_state.state == 'on' else 'sunrise' }}"


- alias: Turn porch light on
  initial_state: true
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.balcony_door_hk
    - binary_sensor.storm_door
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: sun.sun
    to: 'below_horizon'
  condition:
  - condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  - condition: state
    entity_id: light.porch_light
    state: 'off'
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.balcony_door_hk
      state: 'on'
    - condition: state
      entity_id: binary_sensor.storm_door
      state: 'on'
  action:
  - service: light.turn_on
    data:
      entity_id: light.porch_light
      brightness_pct: 100
      kelvin: 4000


- alias: Turn porch light off when balcony door closed
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.balcony_door_hk
    from: 'on'
    to: 'off'
  action:
  - service: light.turn_off
    entity_id: light.porch_light


- alias: Toggle Christmas mode
  initial_state: true
  trigger:
  - platform: time
    at: '00:00:00'
  - platform: homeassistant
    event: start
  condition:
  - condition: template
    value_template: "{{ (now().month == 12 and now().day == 1) or (now().month == 1 and now().day == 2) }}"
  action:
  - service_template: "input_boolean.turn_{{ 'on' if now().month == 12 else 'off' }}"
    entity_id: input_boolean.christmas_mode