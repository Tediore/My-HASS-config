- alias: SMS commands
  id: 'eetuM4beid6iuboo3shooj'
  initial_state: true
  mode: parallel
  trigger:
  - platform: mqtt
    topic: 'sms2mqtt/received'
  condition:
  - condition: template
    value_template: !secret cmd_phone
  action:
  - choose: 
    - conditions:
      - condition: template
        value_template: "{{ trigger.payload_json['text'].lower() == 'ping' }}"
      sequence:
      - service: script.sms_send
        data:
          number: !secret phone_matt
          message: "Pong!"
    - conditions:
      - condition: template
        value_template: "{{ trigger.payload_json['text'].lower() == 'help' }}"
      sequence:
      - service: script.sms_send
        data_template:
          number: !secret phone_matt
          message: >
            Command list:{{'\n\n'}}Ping: Test if server is up.{{'\n\n'}}Status: Receive summary of home status.{{'\n\n'}}Arm: Arm alarm in away mode.{{'\n\n'}}Away: Set thermostat to away mode.{{'\n\n'}}Lights off: Turn all lights off.
    - conditions:
      - condition: template
        value_template: "{{ trigger.payload_json['text'].lower() == 'status' }}"
      sequence:
      - service: script.sms_send
        data_template:
          number: !secret phone_matt
          message: >
            Alarm: {{ states('sensor.alarm_mode') + '\n' }}Thermostat: {{ states('sensor.tstat_profile') + '\n' }}{{ 'All lights are off.' if is_state('group.lights_interior', 'off') else 'The following lights are on: '}}{% for light in expand('group.lights_interior') if light.state == 'on' -%}
            {{ light.attributes.friendly_name.lower() }}
            {%- if not loop.last %}{{ ', ' }} 
            {%- endif %}
            {%- endfor %}
    - conditions:
      - condition: template
        value_template: "{{ trigger.payload_json['text'].lower() == 'lights off' }}"
      sequence:
      - service: homeassistant.turn_off
        data:
          target: group.lights_interior
      - wait_template: "{{ is_state('group.lights_interior', 'off') }}"
        timeout: '00:00:10'
        continue_on_timeout: true
      - service: script.sms_send
        data_template:
          number: !secret phone_matt        
          message: "{{ 'Lights have been turned off.' if is_state('group.lights_interior', 'off') else 'Command timed out.' }}"
    - conditions:
      - condition: template
        value_template: "{{ trigger.payload_json['text'].lower() == 'arm' }}"
      sequence:
      - service: script.turn_on
        entity_id: script.alarm_arm_away
      - service: script.sms_send
        data:
          number: !secret phone_matt
          message: "Arming alarm in away mode."
      - wait_template: "{{ is_state('input_text.alarm', 'armed_away') }}"
        timeout: '00:01:00'
        continue_on_timeout: true
      - service: script.sms_send
        data_template:
          number: !secret phone_matt
          message: "{{ 'Alarm has been armed in away mode.' if is_state('input_text.alarm', 'armed_away') else 'Command timed out.' }}"
    - conditions:
      - condition: template
        value_template: "{{ trigger.payload_json['text'].lower() == 'away' }}"
      sequence:
      - service: script.turn_on
        entity_id: script.tstat_away
    default:
    - service: script.sms_send
      data_template:
        number: !secret phone_matt
        message: "Command “{{ trigger.payload_json['text'] }}” not found."


- alias: Log incoming SMS
  id: 'theezu4gahdah5Coid8Aig'
  initial_state: true
  mode: parallel
  trigger:
  - platform: mqtt
    topic: 'sms2mqtt/received'
  condition:
  - condition: template
    value_template: !secret not_phone
  - condition: template
    value_template: "{{ trigger.payload_json['number'] != '128' }}"
  action:
  - service: system_log.write
    data_template:
      message: "SMS received from {{ trigger.payload_json['number'] }}: {{ trigger.payload_json['text'] }}"
      level: warning
      logger: sms.received_sms
  - service: notify.sms_received
    data:
      message: &message "{{ trigger.payload_json['number'] }}: {{ trigger.payload_json['text'] }}"
  - service: script.sms_send
    data:
      number: !secret phone_matt
      message: *message