- alias: Weather outside
  initial_state: true
  mode: single
  trigger:
  - platform: state
    entity_id: sensor.outside_home_thermometer_temp
  action:
  - service: input_select.select_option
    entity_id: input_select.temperature
    data_template:
      option: >
        {% set temp = trigger.to_state.state | float(0) %}
        {% if temp < 17 %}
          Cold
        {% elif temp < 27 %}
          Warm
        {% else %}
          Hot
        {% endif %}


- alias: Brighten/dim lights with motion
  initial_state: true
  mode: single
  trigger:
  - platform: state
    entity_id: binary_sensor.lumi
    to:
    - 'on'
    - 'off'
  action:
  - service: light.turn_on
    entity_id: light.landing_light_level_light_color_on_off
    data_template:
      brightness: "{{ 200 if trigger.to_state.state == 'on' else 50 }}"


- alias: Media player state lighting
  initial_state: true
  trigger:
  - platform: state
    entity_id: media_player.media_player
    to: 
    - 'playing'
    - 'paused'
    - 'idle'
    - 'off'
  action:
  - service: scene.turn_on
    data_template:
      entity_id: >
        {% set state = trigger.to_state.state %}
        {% set scene = {
          'playing': 'movie_time_lighting',
          'paused': 'living_room_dim',
          'idle': 'living_room_relaxed',
          'off': 'living_room_off'
        } %}
        scene.{{ scene[state] }}


- alias: Sync office lights - on
  initial_state: true
  mode: parallel
  trigger:
  - platform: state
    entity_id:
    - light.sw_1_level
    - light.sw_2_level
  condition:
  - condition: template
    value_template: "{{ trigger.to_state.state != 'off' }}"
  action:
  - service: light.turn_on
    entity_id: light.office_lights
    data_template:
      brightness: "{{ trigger.to_state.attributes.brightness }}"

- alias: Sync office lights - off
  initial_state: true
  mode: parallel
  trigger:
  - platform: state
    entity_id:
    - light.sw_1_level
    - light.sw_2_level
    to: 'off'
  condition:
  - condition: state
    entity_id: light.office_lights
    state: 'on'
  action:
  - service: light.turn_off
    entity_id: light.office_lights


- alias: Toggle button press boolean
  initial_state: true
  mode: parallel
  trigger:
  - platform: event
    event_type: EVENT_TYPE # replace with the button press event type
    event_data:
      key: value # replace with button press event data for button down
  - platform: event
    event_type: EVENT_TYPE # replace with the button press event type
    event_data:
      key: value # replace with button press event data for button up
  action:
  - service_template: "input_boolean.turn_{{ 'on' if trigger.event.data.KEY == 'button_down' else 'off' }}" # replace KEY with whatever the event data key is
    entity_id: input_boolean.button_press


- alias: Dim lights while button held
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.button_press
    from: 'off'
    to: 'on'
  action:
    repeat:
      sequence:
      - service: light.turn_on
        entity_id: light.whatever
        data:
          brightness_step_pct: -2
      - delay: 0.25
      until:
      - condition: or
        - condition: state
          entity_id: input_boolean.button_press
          state: 'off'
        - condition: template
          value_template: "{{ state_attr('light.whatever', 'brightness') | int(0) < 6 }}"


- alias: Record last motion sensor activated
  initial_state: true
  mode: parallel
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.one
    - binary_sensor.two
    - binary_sensor.three
    to: 'on'
  action:
  - service: input_text.set_value
    data_template:
      entity_id: input_text.last_motion
      value: "{{ trigger.to_state.friendly_name }}"


script:
  lights_on_off:
    sequence:
    - choose:
      - conditions:
        - condition: state
          entity_id: light.obyvacka_svetlo
          state: 'off'
        sequence:
        - service: light.turn_on
          entity_id: light.obyvacka_svetlo
        - entity_id: script.script1
          service: script.turn_on
        - entity_id: script.script2
          service: script.turn_off
      - conditions:
        - condition: state
          entity_id: light.obyvacka_svetlo
          state: 'on'
        sequence:
        - service: light.turn_off
          entity_id: light.obyvacka_svetlo
        - entity_id: script.script1
          service: script.turn_off
        - entity_id: script.script2
          service: script.turn_off