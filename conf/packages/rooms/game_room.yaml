automation:
- alias: Xbox turned on/off
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.xbox
  condition:
  - condition: template
    value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
  - condition: not
    conditions:
    - condition: state
      entity_id: input_text.abode
      state: 'armed_away'
    - condition: state
      entity_id: input_boolean.sleep_mode
      state: 'on'
  action:
  - service_template: "script.xbox_{{ trigger.to_state.state }}"


- alias: Transition game room lights to warm
  initial_state: true
  trigger:
  - platform: state
    entity_id: 
    - binary_sensor.desktop
    - input_boolean.dark_inside
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: 
    - input_boolean.dark_inside
    - light.dresser_hk
    state: 'on'
  action:
  - service: hue.hue_activate_scene
    data:
      group_name: Game room
      scene_name: Read
      transition: 200


- alias: Turn game room lights on/off at sunset/sunrise
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.dark_inside
  condition:
  - condition: state
    entity_id: binary_sensor.xbox
    state: 'on'
  - condition: state
    entity_id: input_boolean.sleep_mode
    state: 'off'
  - condition: template
    value_template: "{{ states('input_text.abode') in ['armed_home', 'disarmed'] }}"
  action:
  - service_template: "script.gr_lights_{{ trigger.to_state.state }}"


- alias: Game room dimmer off press
  initial_state: true
  trigger:
  - platform: device
    device_id: 55b3148007f211ebbe759fa8f183002a
    domain: homekit_controller
    type: button4
    subtype: single_press
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.xbox
        state: 'on'
      sequence:
      - service: script.turn_on
        entity_id: script.xbox_off
    - conditions:
      - condition: state
        entity_id: climate.game_room_fan
        state: 'on'
      sequence:
      - service: climate.turn_off
        entity_id: climate.game_room_fan
    - conditions:
      - condition: state
        entity_id: fan.game_room
        state: 'on'
      sequence:
      - service: fan.turn_off
        entity_id: fan.game_room
    default:
    - service: climate.turn_off
      entity_id: climate.space_heater
  - service: light.turn_off
    entity_id: light.game_room_closet


- alias: Turn game room fan off sleep mode
  initial_state: true
  trigger:
  - platform: state
    entity_id: sensor.tstat_profile
    to: 'Sleep'
  condition:
  - condition: state
    entity_id: fan.game_room
    state: 'on'
  action:
  - service: fan.turn_off
    entity_id: fan.game_room


- alias: Turn game room closet light on/off
  initial_state: true
  max_exceeded: silent
  trigger:
  - platform: state
    entity_id: &entity_id
    - binary_sensor.game_room_closet_door
    - binary_sensor.storage
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: *entity_id
    from: 'on'
    to: 'off'
  condition:
  - "{{ trigger.to_state.state != trigger.from_state.state }}"
  action:
  - service: light.turn_on
    entity_id: light.game_room_closet
    data:
      brightness_pct: >
        {% if trigger.to_state.state == 'off' %}
          0
        {% else %}
          {{ 100 if 6 < now().hour < 20 else 50 }}
        {% endif %}


script:
  xbox_on:
    sequence:
    - condition: state
      entity_id: input_boolean.sleep_mode
      state: 'off'
    - condition: template
      value_template: "{{ states('input_text.abode') in ['armed_home', 'disarmed'] }}"
    - service: switch.turn_on
      entity_id: switch.game_room_bias_lighting
    - service: media_player.turn_off
      entity_id:
      - media_player.all_speakers
      - media_player.portable_speaker
    - service: script.turn_on
      entity_id: script.gr_lights_on
    - condition: template
      value_template: "{{ states('climate.thermostat') in ['heat', 'cool'] }}"
    - service: homeassistant.turn_on
      data_template:
        entity_id: "{{ 'climate.game_room_fan' if is_state('climate.thermostat', 'cool') else 'climate.space_heater' }}"
  
  xbox_off:
    sequence:
    - service: homeassistant.turn_off
      entity_id: 
      - switch.game_room_bias_lighting
      - climate.space_heater
    - condition: state
      entity_id: climate.game_room_fan
      state: 'on'
    - service: climate.turn_off
      entity_id: climate.game_room_fan
  
  gr_lights_on:
    alias: Game room lights on
    sequence:
    - condition: state
      entity_id: input_boolean.dark_inside
      state: 'on'
    - service: light.turn_on
      entity_id: light.game_room
      data:
        kelvin: 3000
        transition: 5
        brightness_pct: 100
  
  gr_lights_off:
    alias: Game room lights off
    sequence:
    - service: light.turn_off
      entity_id: light.game_room
      data:
        transition: 30

  gr_fan_on:
    sequence:
    - condition: state
      entity_id: fan.game_room
      state: 'off'
    - service: switch.turn_off
      entity_id: switch.game_room_fan_plug  # resets game room fan to speed 1
    - delay: 0.5
    - service: switch.turn_on
      entity_id: switch.game_room_fan_plug
    - delay: 1
    - service: fan.turn_on
      entity_id: fan.game_room


climate:
- platform: generic_thermostat
  name: Space heater
  heater: switch.space_heater
  target_sensor: sensor.game_room_temp_calibrated
  min_temp: 65
  max_temp: 71
  cold_tolerance: 1
  hot_tolerance: 1

- platform: generic_thermostat
  name: Game room fan
  ac_mode: true
  heater: switch.game_room_fan
  target_sensor: sensor.game_room_temp_calibrated
  min_temp: 70
  max_temp: 78
  cold_tolerance: 1
  hot_tolerance: 1


switch:
- platform: template
  switches:
    game_room_fan: # need for generic thermostat
      friendly_name: Game room fan
      value_template: "{{ is_state('fan.game_room', 'on') }}"
      turn_on:
        service: script.turn_on
        entity_id: script.gr_fan_on
      turn_off:
        service: fan.turn_off
        entity_id: fan.game_room


fan:
- platform: template
  fans:
    game_room:
      friendly_name: Game room fan
      value_template: "{{ 'on' if states('sensor.game_room_fan_power') | float > 10 else 'off' }}"
      turn_on: &power
        service: script.ir_fan_power
        data:
          blaster: game_room_ir
      turn_off: *power


input_number:
  game_room_temp:
    name: Game room temp
    icon: mdi:home-outline
    min: 0
    max: 100
    step: 1
    unit_of_measurement: 'Â°F'
    mode: box