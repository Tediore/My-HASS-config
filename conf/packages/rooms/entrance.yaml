automation:
- alias: Turn entrance light on/off with switch
  initial_state: true
  trigger:
  - platform: mqtt
    topic: "entrance_light_switch/button"
    payload: 'SINGLE'
  - platform: state
    entity_id: sensor.entrance_light_button_action
    to:
    - 'on'
    - 'off'
  action:
  - service: light.toggle
    entity_id: light.entrance
    data:
      brightness_pct: 100


# - alias: Turn entrance light on before sound check
#   initial_state: true
#   trigger:
#   - platform: time
#     at: '06:55:00'
#   condition:
#   - condition: time
#     weekday: sun
#   - condition: template
#     value_template: "{{ state_attr('calendar.church', 'message') != None and 'sound check' in state_attr('calendar.church', 'message').lower() }}"
#   - condition: template
#     value_template: "{{ as_timestamp(now()) | timestamp_custom('%-d') == as_timestamp(state_attr('calendar.church', 'start_time')) | timestamp_custom('%-d') }}"
#   - condition: template
#     value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
#   action:
#   - service: light.turn_on
#     entity_id: light.entrance


# - alias: Turn entrance light on/off before work
#   initial_state: true
#   trigger:
#   - platform: time
#     at: 
#     - '07:25:00'
#     - '08:00:00'
#   condition:
#   - condition: state
#     entity_id: device_tracker.andy_phone
#     state: 'home'
#   - condition: template
#     value_template: "{{ is_state_attr('calendar.andy_work', 'message', 'Work') and as_timestamp(now()) | timestamp_custom('%-d') == as_timestamp(state_attr('calendar.andy_work', 'start_time')) | timestamp_custom('%-d') }}"
#   - condition: template
#     value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
#   action:
#   - service_template: "light.turn_{{ 'on' if now().minute == 25 else 'off' }}"
#     entity_id: light.entrance
#   - wait_template: "{{ is_state('binary_sensor.front_door', 'on') }}"
#     timeout: '00:15:00'
#     continue_on_timeout: true
#   - wait_template: "{{ is_state('binary_sensor.front_door', 'off') }}"
#     timeout: '00:05:00'
#     continue_on_timeout: true
#   - service: light.turn_off
#     entity_id: light.entrance


# - alias: Turn entrance light on before rehearsal
#   initial_state: true
#   trigger:
#   - platform: template
#     value_template: "{{ state_attr('calendar.church', 'message') != None and 'rehearsal' in state_attr('calendar.church', 'message').lower() and ((as_timestamp(state_attr('calendar.church', 'start_time')) - 1800) == as_timestamp(states('sensor.date_time_iso'))) }}"
#   condition:
#   - condition: template
#     value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
#   action:
#   - service: light.turn_on
#     entity_id: light.entrance