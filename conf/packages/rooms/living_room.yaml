automation:
- alias: Turn lights on/off with TV IR
  initial_state: true
  mode: single
  trigger:
  - platform: state
    entity_id: &lr_ir sensor.lr_ir_received
    to: '0X20DF10EF'
  condition:
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'on'
  - "{{ not is_state('media_player.living_room_vizio', 'unavailable') }}"
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.lr_tv_ir
  - service: script.turn_on
    data_template:
      entity_id: "script.{{ 'pre_media' if is_state('media_player.living_room_vizio', 'off') else 'post_media' }}"


- alias: Turn off lights and speakers when TV turned on
  initial_state: true
  mode: single
  trigger:
  - platform: state
    entity_id: media_player.living_room_vizio
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: *lr_ir
    to: &ir_codes
    - '0X20DF57A8' # Amazon video
    - '0X20DFD728' # Netflix
    - '0X00FF827D'
    - '0X20DFB44B'
    - '0X20DF629D' # SmartCast Home
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{ trigger.entity_id == 'media_player.living_room_vizio' }}"
      sequence:
      - wait_template: "{{ states('sensor.living_room_vizio_app_name') != '' }}"
        timeout: '00:00:10'
        continue_on_timeout: true
      - condition: template
        value_template: "{{ states('sensor.living_room_vizio_app_name') not in ['unknown', '_UNKNOWN_APP'] }}"
      - condition: template
        value_template: >
          {% if state_attr('media_player.living_room_cast', 'app_name') != None %}
            {{ state_attr('media_player.living_room_cast', 'app_name')[:3] != 'BOD' }}
          {% else %}
            True
          {% endif %}
      - service: script.turn_on
        entity_id: script.pre_media
    default:
    - service: script.turn_on
      entity_id: script.pre_media


- alias: Turn soundbar on with TV
  initial_state: true
  mode: single
  trigger:
  - platform: state
    entity_id: media_player.living_room_vizio
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: *lr_ir
    to: *ir_codes
  action:
  - service: script.turn_on
    entity_id: script.ir_soundbar_vol_up
  - delay: 20


- alias: Turn thermostat off when working out
  initial_state: true
  trigger:
  - platform: template
    value_template: "{{ state_attr('media_player.living_room_vizio', 'app_name') != None and state_attr('media_player.living_room_cast', 'app_name')[:3] == 'BOD' }}"
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'heat'
  action:
  - service: climate.turn_off
    entity_id: climate.thermostat
  - service: homeassistant.turn_on
    entity_id: 
    - input_boolean.workout
    - switch.living_room_fan


- alias: Resume thermostat schedule after working out
  initial_state: true
  trigger:
  - platform: template
    value_template: "{{ state_attr('media_player.living_room_cast', 'app_name') == None }}"
  condition:
  - condition: state
    entity_id: input_boolean.workout
    state: 'on'
  action:
  - service: homeassistant.turn_off
    entity_id:
    - switch.living_room_fan
    - input_boolean.workout
  - delay: '00:05:00'
  - service: input_boolean.turn_on
    entity_id: input_boolean.tstat_sched_resume


- alias: Set living room TV auto-brightness
  initial_state: true
  trigger:
  - platform: state
    entity_id: sun.sun
    to:
    - 'above_horizon'
    - 'below_horizon'
    for: '00:30:00'
  action:
  - service: vizio.update_setting
    data:
      entity_id: media_player.living_room_vizio
      setting_type: picture
      setting_name: auto_brightness_control
      new_value: "{{ 'High' if trigger.to_state.state == 'below_horizon' else 'Off' }}"


- alias: Restore lights when TV turned off
  initial_state: true
  trigger:
  - platform: state
    entity_id: media_player.living_room_vizio
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: media_player.living_room_cast
    from:
    - 'playing'
    - 'paused'
    - 'idle'
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'on'
  - condition: state
    entity_id: 
    - light.living_room
    - input_boolean.andy_sleep
    - input_boolean.sleep_mode
    state: 'off'
  - condition: template
    value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
  action:
  - service: script.turn_on
    entity_id: script.post_media


- alias: Turn off living room TV bias lighting
  initial_state: true
  trigger:
  - platform: state
    entity_id: media_player.living_room_vizio
    from: 'on'
    to: 'off'
  action:
  - service: light.turn_off
    entity_id: light.living_room_bias_lighting


- alias: Boost TV volume when furnace on
  initial_state: true
  trigger:
  - platform: state
    entity_id: sensor.hvac_action
    to: 'cooling'
  - platform: state
    entity_id: sensor.hvac_action
    to: 'heating'
    for: '00:01:00'
  condition:
  - condition: state
    entity_id: media_player.living_room_vizio
    state: 'on'
  - condition: template
    value_template: "{{ not is_state_attr('media_player.living_room_vizio', 'app_name', 'SmartCast Home') }}"
  action:
  - repeat:
      count: "{{ 3 if trigger.to_state.state == 'heating' else 5 }}"
      sequence:
      - service: script.turn_on
        entity_id: script.ir_soundbar_vol_up
      - delay: 0.5


- alias: Lower TV volume when furnace off
  initial_state: true
  trigger:
  - platform: state
    entity_id: sensor.hvac_action
    from: 'cooling'
    to:
    - 'idle'
    - 'off'
    for: '00:00:52'
  - platform: state
    entity_id: sensor.hvac_action
    from: 'heating'
    to:
    - 'idle'
    - 'off'
    for: '00:02:00'
  condition:
  - condition: state
    entity_id: media_player.living_room_vizio
    state: 'on'
  action:
  - repeat: &soundbar_vol_dn
      count: "{{ 3 if trigger.to_state.state == 'heating' else 5 }}"
      sequence:
      - service: script.turn_on
        entity_id: script.ir_soundbar_vol_dn
      - delay: 0.5


- alias: Lower TV volume when TV turned off
  initial_state: true
  trigger:
  - platform: state
    entity_id: media_player.living_room_vizio
    from: 'on'
    to: 'off'
  condition:
  - condition: template
    value_template: "{{ states('sensor.hvac_action') in ['cooling', 'heating'] }}"
  action:
  - repeat: *soundbar_vol_dn


- alias: Toggle air freshener
  initial_state: true
  trigger:
  - platform: time_pattern
    hours: '/2'
  condition:
  - condition: template
    value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
  - condition: state
    entity_id: 
    - input_boolean.sleep_mode
    - input_boolean.andy_sleep
    state: 'off'
  action:
  - service: switch.toggle
    entity_id: switch.air_freshener


- alias: Transition living room lights to warm
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.dark_inside
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: 
    - input_boolean.dark_inside
    - light.left_lamp
    state: 'on'
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: light.left_sconce_hk
        state: 'on'
      sequence:
      - service: light.turn_on
        entity_id: light.living_room
        data:
          kelvin: 3000
          brightness_pct: 100
          transition: 20
    - conditions:
      - condition: state
        entity_id: light.left_lamp_hk
        state: 'on'
      sequence:
      - service: light.turn_on
        entity_id: light.living_room_lamps
        data:
          kelvin: 3000
          brightness_pct: 100
          transition: 20


script:
  pre_media:
    alias: Turn stuff off when TV turned on
    sequence:
    - service: homeassistant.turn_off
      entity_id:
      - media_player.living_room_speaker
      - media_player.bedroom_speaker
      - media_player.kitchen_speaker
      - media_player.hub
      - input_boolean.lr_tv_ir
    - condition: state
      entity_id: input_boolean.dark_inside
      state: 'on'
    - service: light.turn_on
      entity_id: light.buffet
      data:
        kelvin: 3000
        transition: 2
        brightness_pct: 50
    - service: light.turn_on
      entity_id: light.kitchen_cabinets
      data:
        brightness_pct: "{{ 50 if is_state('input_boolean.kitchen_cabinet_light_ctl', 'on') else 25 }}"
        transition: 5
    - service: script.turn_on
      entity_id: script.christmas_lights_off
    - service: light.turn_on
      entity_id: light.living_room_bias_lighting
      data:
        kelvin: 6500
        brightness_pct: 100
    - condition: state
      entity_id: light.living_room_lamps
      state: 'on'
    - service: light.turn_off
      entity_id: light.living_room
      data:
        transition: 2

  post_media:
    alias: Turn lights back on when TV turned off
    sequence:
    - service: light.turn_on
      data:
        entity_id: "{{ 'light.living_room_lamps, light.buffet' if is_state('light.living_room', 'off') else 'light.buffet' }}"
        kelvin: 3000
        transition: 3
        brightness_pct: "{{ 100 if 6 < now().hour < 21 else 50 }}"
    - service: script.turn_on
      entity_id: script.christmas_lights_on
    - service: light.turn_off
      entity_id: light.living_room_bias_lighting
    - service: input_boolean.turn_off
      entity_id: input_boolean.lr_tv_ir

  cross_stitch_light:
    sequence:
    - service: light.turn_on
      entity_id: light.right_lamp
      data:
        kelvin: 5000
        brightness_pct: 100


switch:
- platform: template
  switches:
    living_room_fan:
      turn_on: &fan_power
      - service: script.ir_fan_power
        data:
          blaster: entertainment_center_ir
      turn_off: *fan_power


input_boolean:
  lr_tv_ir:
  workout: