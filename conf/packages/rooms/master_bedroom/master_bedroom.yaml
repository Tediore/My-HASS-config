automation:
- alias: Turn bedroom lights off in morning on workday
  initial_state: true
  trigger:
  - platform: time
    at: '07:45:00'
  condition:
  - condition: state
    entity_id: light.master_bedroom_lamps
    state: 'on'
  - condition: or
    conditions:
    - condition: template
      value_template: "{{ as_timestamp(now()) | timestamp_custom('%d') == as_timestamp(state_attr('calendar.andy_work', 'start_time')) | timestamp_custom('%d') }}"
    - condition: template
      value_template: "{{ as_timestamp(now()) | timestamp_custom('%d') == as_timestamp(state_attr('calendar.work', 'start_time')) | timestamp_custom('%d') }}"
  - condition: template
    value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
  action:
  - service: light.turn_off
    entity_id: light.master_bedroom_lamps
    data:
      transition: 60


# - alias: Turn master bedroom closet light on/off with motion
#   initial_state: true
#   trigger:
#   - platform: state
#     entity_id: binary_sensor.master_bedroom_closet_motion # 30 second cooldown
#     to: 
#     - 'on'
#     - 'off'
#   condition:
#   - "{{ trigger.to_state.state != states('light.master_bedroom_closet') }}"
#   - condition: state
#     entity_id:
#     - input_boolean.sleep_mode
#     - input_boolean.andy_sleep
#     state: 'off'
#   action:
#   - service: light.turn_on
#     entity_id: light.master_bedroom_closet
#     data:
#       brightness_pct: >
#         {% if trigger.to_state.state == 'on' %}
#           {% if is_state('light.master_bedroom_lamps', 'off') and is_state('input_boolean.dark_inside', 'on') %}
#             50
#           {% else %}
#             {{ 100 if 6 < now().hour < 21 else 50 }}
#           {% endif %}
#         {% else %}
#           0
#         {% endif %}


- alias: Transition master bedroom lights to warm
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.dark_inside
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: light.matt_hk
    state: 'on'
  action:
  - service: hue.hue_activate_scene
    data:
      group_name: Master bedroom lamps
      scene_name: Read
      transition: 200


- alias: Turn mini Christmas tree on
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.master_bedroom_motion
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'on'
  - condition: state
    entity_id: input_boolean.andy_sleep
    state: 'off'
  - "{{ now().month in [11, 12, 1, 2] }}"
  action:
  - service: light.turn_on
    entity_id: light.mini_christmas_tree


- alias: Turn mini Christmas tree off
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.master_bedroom_motion
    to: 'off'
    for: '00:05:00'
  - platform: state
    entity_id: light.matt_hk
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: light.matt_hk
    state: 'off'
  action:
  - service: light.turn_off
    entity_id: light.mini_christmas_tree


- alias: Turn master bedroom AC generic tstat on with switch button
  initial_state: true
  trigger:
  - platform: state
    entity_id: switch.bedroom_ac
    to:
    - 'off'
    - 'on'
  action:
  - choose:
    - conditions:
      - "{{ trigger.to_state.state == 'on' }}"
      - condition: state
        entity_id: climate.bedroom_ac
        state: 'off'
      sequence:
      - service: climate.set_temperature
        entity_id: climate.bedroom_ac
        data:
          temperature: "{{ states('input_number.bedroom_ac_temp_andy') | int }}"
          hvac_mode: cool
    - conditions:
      - "{{ trigger.to_state.state == 'off' }}"
      - condition: state
        entity_id: climate.bedroom_ac
        state: 'on'
      sequence:
      - service: climate.turn_off
        entity_id: climate.bedroom_ac


switch:
- platform: template
  switches:
    bedroom_fan:
      friendly_name: Bedroom fan
      value_template: "{{ is_state('switch.master_bedroom_fan', 'on') }}"
      turn_on:
      - service: switch.turn_on
        entity_id: switch.master_bedroom_fan
      - delay: 1
      - service: mqtt.publish
        data:
          topic: 'cmnd/master_bedroom_fan/tuyasend4'
          payload: '3,3' # max speed
      turn_off:
        service: switch.turn_off
        entity_id: switch.master_bedroom_fan


# fan:
# - platform: mqtt
#   name: Master bedroom
#   availability_topic: 'tele/master_bedroom_fan/LWT'
#   payload_available: 'Online'
#   payload_not_available: 'Offline'
#   state_topic: 'stat/master_bedroom_fan/POWER'
#   command_topic: 'cmnd/master_bedroom_fan/POWER'
#   payload_on: 'ON'
#   payload_off: 'OFF'
#   percentage_state_topic: 'stat/master_bedroom_fan/speed'
#   percentage_value_template: "{{ (value | replace('3,','') | int + 1) * 25 }}"
#   percentage_command_topic: 'cmnd/master_bedroom_fan/tuyasend4'
#   percentage_command_template: "3,{{ ((value | int - 1) / 25) | int }}"
#   speed_range_min: 1
#   speed_range_max: 4


climate:
- platform: generic_thermostat
  name: Master bedroom fan
  heater: switch.bedroom_fan
  ac_mode: true
  target_sensor: sensor.master_bedroom_temp
  min_temp: 63
  max_temp: 75
  cold_tolerance: 0
  hot_tolerance: 1

- platform: generic_thermostat
  name: Bedroom AC 
  heater: switch.bedroom_ac
  ac_mode: true
  target_sensor: sensor.master_bedroom_temp
  min_temp: 66
  max_temp: 75
  cold_tolerance: 0
  hot_tolerance: 2
  precision: 0.1


input_number:
  bedroom_ac_temp_matt:
    name: Matt sleep
    min: 65
    max: 75
    step: 1
    mode: box

  bedroom_ac_temp_andy:
    name: Andy sleep
    min: 65
    max: 75
    step: 1
    mode: box