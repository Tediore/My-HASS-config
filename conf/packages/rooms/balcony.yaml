automation:
- alias: Turn porch light on at night
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.alarm
    to: 
    - 'armed_home'
    - 'disarmed'
  - platform: time
    at: '22:00:00'
  condition:
  - condition: time
    after: '22:00:00'
    before: '05:00:00'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.christmas_porch_light_loop
  - service: script.porch_light_security


- alias: Turn porch light off at sunrise
  initial_state: true
  trigger:
  - platform: sun
    event: sunrise
    offset: '-01:30:00'
  action:
  - service: light.turn_off
    entity_id: light.porch
  - condition: state
    entity_id: input_boolean.christmas
    state: 'on'
  - service: light.turn_off
    entity_id: light.christmas_lights


- alias: Turn porch light white when door opened
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.balcony_door
    to: 'on'
  - platform: state
    entity_id: sun.sun
    to: 'below_horizon'
  condition:
  - condition: state
    entity_id: binary_sensor.balcony_door
    state: 'on'
  - condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  - condition: state
    entity_id: input_boolean.on_balcony
    state: 'off'
  - condition: template
    value_template: "{{ trigger.to_state.state != trigger.from_state.state }}"
  action:
  - service: scene.create
    data:
      scene_id: before_balcony_opened
      snapshot_entities:
      - light.porch
  - service: light.turn_on
    entity_id: light.porch
    data:
      kelvin: 4000
      brightness_pct: 100
      transition: 5


- alias: Restore porch light color when door closed
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.balcony_door
    from: 'on'
    to: 'off'
    for: '00:00:10'
  condition:
  - condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  - condition: state
    entity_id: input_boolean.on_balcony
    state: 'off'
  - condition: template
    value_template: "{{ states('input_text.porch_light_xy_color') != None }}"
  action:
  - service: scene.turn_on
    entity_id: scene.before_balcony_opened
    data:
      transition: 2


- alias: Turn porch light on/off with motion
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.balcony_motion
    to: 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: 'below_horizon'
    for: '00:30:00'
  - condition: not
    conditions:
    - condition: state
      entity_id: binary_sensor.balcony_door
      state: 'on'
  action:
  - service: scene.create
    data:
      scene_id: before_porch_light
      snapshot_entities:
      - light.porch
  - service: light.turn_on
    entity_id: light.porch
    data:
      brightness_pct: 100
  - wait_template: "{{ is_state('binary_sensor.balcony_motion', 'off') }}"
    timeout: '00:05:30'
    continue_on_timeout: true
  - scene: scene.before_porch_light


- alias: Record when on balcony
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.balcony_door
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  - condition: state
    entity_id: input_boolean.on_balcony
    state: 'off'
  action:
  - wait_template: "{{ is_state('binary_sensor.balcony_motion', 'on') }}"
    timeout: '00:00:30'
    continue_on_timeout: false
  - service: input_boolean.turn_on
    entity_id: input_boolean.on_balcony


- alias: Clear when on balcony
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.balcony_door
    from: 'on'
    to: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.on_balcony
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.on_balcony


script:
  porch_light_security:
    sequence:
    - condition: state
      entity_id: input_boolean.extra_sleep
      state: 'off'
    - service: light.turn_on
      entity_id: light.porch
      data:
        brightness_pct: 50
        kelvin: 3700
    - service: input_text.set_value
      entity_id: input_text.porch_light_color
      data:
        value: 'white'


input_boolean:
  on_balcony: