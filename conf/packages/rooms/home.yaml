automation:
- alias: Toggle dark inside boolean
  initial_state: true
  trigger:
  - platform: state
    entity_id: sun.sun
    to:
    - 'below_horizon'
    - 'above_horizon'
    for: '00:20:00'
  action:
  - service: "homeassistant.turn_{{ 'on' if trigger.to_state.state == 'below_horizon' else 'off' }}" 
    entity_id:
    - input_boolean.dark_inside
    - switch.hue_dark_inside


- alias: Set brightness preset on switches
  initial_state: true
  trigger:
  - platform: time
    at: '21:00:00'
  - platform: sun
    event: sunrise
  - platform: homeassistant
    event: start
  action:
  - wait_template: "{{ is_state('binary_sensor.game_room_closet', 'off') or is_state('binary_sensor.storage', 'off') }}"
  - service: script.brightness_preset
    data:
      device: game_room_closet_light
      brightness_pct: "{{ 100 if 5 < now().hour < 21 else 50 }}"


- alias: Turn on sunset lights - light level
  initial_state: true
  trigger:
  - platform: numeric_state
    entity_id: sensor.kitchen_light_level
    below: &threshold 10
    for: '00:01:00'
  - platform: time
    at: '15:30:00'
  - platform: state
    entity_id: input_text.abode
    from: 'armed_away'
    to: 'disarmed'
  condition:
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'off'
  - condition: state
    entity_id: input_text.abode
    state:
    - 'disarmed'
    - 'armed_home'
  - condition: time
    after: '15:30:00'
    before: '21:30:00'
  - condition: numeric_state
    entity_id: sensor.kitchen_light_level
    below: *threshold
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.dark_inside


- alias: Dim cabinet and buffet lights at night
  initial_state: true
  trigger:
  - platform: time
    at: &time '21:00:00'
  - platform: homeassistant
    event: start
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.kitchen_cabinets
      state: 'on'
    - condition: state
      entity_id: light.buffet
      state: 'on'
  - condition: time
    after: *time
  action:
  - service: light.turn_on
    data:
      entity_id: >
        {% set cabinets = states('light.kitchen_cabinets') %}
        {% set buffet = states('light.buffet') %}
        {% if cabinets == 'on' and buffet == 'on' %}
          light.kitchen_cabinets, light.buffet
        {% elif cabinets == 'on' %}
          light.kitchen_cabinets
        {% else %}
          light.buffet
        {% endif %}
      brightness_pct: 66
      transition: 10


- alias: Turn lights on/off at sunset/sunrise if home
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.dark_inside
  - platform: device
    device_id: 55b0121107f211ebb27d373eedc421d7
    domain: homekit_controller
    type: button2
    subtype: single_press
  condition:
  - condition: template
    value_template: "{{ states('input_text.abode') in ['armed_home', 'disarmed'] }}"
  action:
  - service_template: "script.lights_{{ 'sunset' if trigger.platform == 'device' or trigger.to_state.state == 'on' else 'sunrise' }}"


- alias: HVAC closet door opened/closed
  initial_state: true
  mode: parallel
  trigger:
  - platform: state
    entity_id: binary_sensor.hvac_closet
    to:
    - 'on'
    - 'off'
  condition:
  - condition: state
    entity_id: input_boolean.sleep_mode
    state: 'off'
  - condition: state
    entity_id: input_boolean.andy_sleep
    state: 'off'
  action:
  - service: light.turn_on
    entity_id: light.laundry_room
    data_template:
      brightness_pct: "{{ 100 if trigger.to_state.state == 'on' else 0 }}"
      kelvin: 4000
  - service_template: "switch.turn_{{ 'on' if trigger.to_state.state == 'off' else 'off' }}"
    entity_id: switch.laundry_room_motion_sensor


- alias: Toggle buffet light with dining room lights
  initial_state: true
  trigger:
  - platform: state
    entity_id: light.dining_room
  condition:
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'on'
  - condition: template
    value_template: "{{ states('input_text.abode') in ['armed_home', 'disarmed'] }}"
  action:
  - service_template: "light.turn_{{ 'on' if trigger.to_state.state == 'off' else 'off' }}"
    entity_id: light.buffet


# - alias: Turn portable Christmas tree on with motion
#   initial_state: true
#   mode: single
#   trigger:
#   - platform: state
#     entity_id: binary_sensor.entrance_motion
#     to: 'on'
#   condition:
#   - "{{ (as_timestamp(now()) - as_timestamp(state_attr('automation.turn_portable_christmas_tree_on_with_motion', 'last_triggered'))) / 3600 > 0.15 }}"
#   action:
#   - service: light.turn_on
#     entity_id: light.portable_mini_christmas_tree
#   - delay: '00:01:00'
#   - service: light.turn_off
#     entity_id: light.portable_mini_christmas_tree


input_boolean:
  dark_inside:


script:
  lights_sunset:
    sequence:
    - service: script.turn_on
      entity_id: 
      - script.wait_dining_room_lights_off
      - script.christmas_tree_on
    - service: light.turn_on
      entity_id: 
      - light.kitchen_cabinets
      - light.portable_mini_christmas_tree
      data:
        brightness_pct: 100
    # - service: light.turn_on
    #   entity_id: light.hall_bath_night_light
    #   data:
    #     brightness_pct: 34
    - condition: state
      entity_id: media_player.living_room_vizio
      state: 'on'
    - service: light.turn_on
      entity_id: light.living_room_bias_lighting
      data:
        brightness_pct: 100
        kelvin: 5000
        transition: 10
  
  lights_sunrise:
    sequence:
    - service: light.turn_off
      entity_id: 
      - light.buffet
      - light.hall_bath_night_light
      data:
        transition: 30
    - delay: '00:00:30'
    - service: light.turn_off
      entity_id: light.kitchen_cabinets
    - service: input_boolean.turn_off
      entity_id:
      - input_boolean.on_balcony_init0
      - input_boolean.on_balcony_init1
      - input_boolean.on_balcony_init2
      - input_boolean.on_balcony
    - condition: state
      entity_id: input_boolean.christmas
      state: 'on'
    - service: light.turn_off
      entity_id: 
      - light.christmas_tree
      - light.mini_christmas_tree

  wait_dining_room_lights_off:
    sequence:
    - wait_template: "{{ is_state('light.dining_room', 'off') }}"
      timeout: '08:00:00'
      continue_on_timeout: false
    - service: light.turn_on
      entity_id: light.buffet
      data_template:
        kelvin: 3000
        transition: 10
        brightness_pct: "{{ 100 if is_state('media_player.living_room_vizio', 'off') else 50 }}"

  christmas_tree_on:
    sequence:
    - condition: state
      entity_id: input_boolean.christmas
      state: 'on'
    - service: light.turn_on
      entity_id: light.christmas_tree

  brightness_preset:
    sequence:
    - service: mqtt.publish
      data:
        topic: "cmnd/{{ device }}/dimmer"
        payload: "{{ brightness_pct }}"