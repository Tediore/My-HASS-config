automation:
- alias: Toggle dark inside boolean
  initial_state: true
  trigger:
  - platform: state
    entity_id: sun.sun
    to:
    - 'below_horizon'
    - 'above_horizon'
    for: '00:20:00'
  action:
  - service: "homeassistant.turn_{{ 'on' if trigger.to_state.state == 'below_horizon' else 'off' }}" 
    entity_id:
    - input_boolean.dark_inside
    - switch.hue_dark_inside


- alias: Set brightness preset on switches
  initial_state: true
  trigger:
  - platform: time
    at: '21:00:00'
  - platform: sun
    event: sunrise
  - platform: homeassistant
    event: start
  action:
  - wait_template: "{{ is_state('binary_sensor.game_room_closet', 'off') or is_state('binary_sensor.storage', 'off') }}"
    timeout: '00:08:00'
    continue_on_timeout: false
  - service: script.brightness_preset
    data:
      device: game_room_closet_light
      brightness_pct: "{{ 100 if 5 < now().hour < 21 else 50 }}"


- alias: Turn on sunset lights - light level
  initial_state: true
  trigger:
  - platform: numeric_state
    entity_id: &kitchen sensor.kitchen_light_level
    below: &kitchen_threshold 10
    for: '00:01:00'
  - platform: numeric_state
    entity_id: &balcony sensor.balcony_light_level
    below: &balcony_threshold 50
    for: '00:10:00'
  - platform: time
    at: &dark_inside_time '15:30:00'
  - platform: state
    entity_id: input_text.abode
    from: 'armed_away'
    to: 'disarmed'
  condition:
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'off'
  - condition: state
    entity_id: input_text.abode
    state:
    - 'disarmed'
    - 'armed_home'
  - condition: time
    after: *dark_inside_time
    before: '21:30:00'
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: *kitchen
      below: *kitchen_threshold
    - condition: numeric_state
      entity_id: *balcony
      below: *balcony_threshold
  action:
  - service: homeassistant.turn_on
    entity_id: 
    - input_boolean.dark_inside
    - switch.hue_dark_inside


- alias: Dim cabinet and buffet lights at night
  initial_state: true
  trigger:
  - platform: time
    at: &time '21:00:00'
  - platform: homeassistant
    event: start
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.kitchen_cabinets
      state: 'on'
    - condition: state
      entity_id: light.buffet
      state: 'on'
  - condition: time
    after: *time
  action:
  - service: light.turn_on
    entity_id: light.kitchen_cabinets
    data:
      brightness_pct: 50
      transition: 10
  - condition: template
    value_template: "{{ state_attr('light.buffet', 'brightness') | int > 170 }}"
  - service: light.turn_on
    entity_id: light.buffet
    data:
      brightness_pct: 66
      transition: 10
  # - service: light.turn_on
  #   data:
  #     entity_id: >
  #       {% set cabinets = states('light.kitchen_cabinets') %}
  #       {% set brightness = state_attr('light.kitchen_cabinets', 'brightness') | int %}
  #       {% set buffet = states('light.buffet') %}
  #       {% if cabinets == 'on' and brightness > 160 %}
  #         {% if buffet == 'on' %}
  #           light.kitchen_cabinets, light.buffet
  #         {% elif cabinets == 'on' %}
  #           light.kitchen_cabinets
  #         {% endif %}
  #       {% else %}
  #         light.buffet
  #       {% endif %}
  #     brightness_pct: 66
  #     transition: 10


- alias: Turn lights on/off at sunset/sunrise if home
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.dark_inside
  - platform: device
    device_id: 55b0121107f211ebb27d373eedc421d7
    domain: homekit_controller
    type: button2
    subtype: single_press
  condition:
  - condition: template
    value_template: "{{ states('input_text.abode') in ['armed_home', 'disarmed'] }}"
  action:
  - service_template: "script.lights_{{ 'sunset' if trigger.platform == 'device' or trigger.to_state.state == 'on' else 'sunrise' }}"


- alias: HVAC closet door opened/closed
  initial_state: true
  mode: parallel
  trigger:
  - platform: state
    entity_id: binary_sensor.hvac_closet
    to:
    - 'on'
    - 'off'
  condition:
  - condition: state
    entity_id: input_boolean.sleep_mode
    state: 'off'
  - condition: state
    entity_id: input_boolean.andy_sleep
    state: 'off'
  action:
  - service: light.turn_on
    entity_id: light.laundry_room
    data_template:
      brightness_pct: "{{ 100 if trigger.to_state.state == 'on' else 0 }}"
      kelvin: 4000
  - service_template: "switch.turn_{{ 'on' if trigger.to_state.state == 'off' else 'off' }}"
    entity_id: switch.laundry_room_motion_sensor


- alias: Toggle buffet light with dining room lights
  initial_state: true
  trigger:
  - platform: state
    entity_id: light.dining_room
  condition:
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'on'
  - condition: template
    value_template: "{{ states('input_text.abode') in ['armed_home', 'disarmed'] }}"
  action:
  - service_template: "light.turn_{{ 'on' if trigger.to_state.state == 'off' else 'off' }}"
    entity_id: light.buffet
  - condition: template
    value_template: "{{ now().month in [11, 12] }}"
  - service_template: "light.turn_{{ 'on' if trigger.to_state.state == 'off' else 'off' }}"
    entity_id: light.portable_mini_christmas_tree


input_boolean:
  dark_inside:


script:
  lights_sunset:
    sequence:
    - service: script.turn_on
      entity_id: 
      - script.wait_dining_room_lights_off
      - script.wait_master_bedroom_lights_off
      - script.christmas_lights_on
    - service: light.turn_on
      entity_id: light.kitchen_cabinets
      data:
        brightness_pct: 100
        transition: 5
    - service: light.turn_on
      entity_id: light.hall_bath_night_light
      data:
        brightness_pct: 34
    - service: script.turn_on
      entity_id: script.lr_lights_sunset

  lr_lights_sunset:
    sequence:
    - condition: template
      value_template: "{{ now().month not in [12,1] }}"
    - wait_template: "{{ states('sensor.balcony_light_level') | int < 10 }}"
      timeout: "00:30:00"
      continue_on_timeout: true
    - condition: state
      entity_id: media_player.living_room_vizio
      state: 'off'
    - service: light.turn_on
      data:
        entity_id: light.living_room_lamps
        brightness_pct: 100
        kelvin: 3000
        transition: 30
  
  lights_sunrise:
    sequence:
    - service: light.turn_off
      entity_id: light.buffet
      data:
        transition: 30
    - delay: '00:00:30'
    - service: light.turn_off
      entity_id: 
      - light.kitchen_cabinets
      - light.hall_bath_night_light
      - light.master_bath_night_light
      - light.dining_room_night_light
      data:
        transition: 1
    - service: script.turn_on
      entity_id: script.christmas_lights_off

  wait_dining_room_lights_off:
    sequence:
    - wait_template: "{{ is_state('light.dining_room', 'off') }}"
      timeout: '08:00:00'
      continue_on_timeout: false
    - service: light.turn_on
      entity_id: light.buffet
      data_template:
        kelvin: 3000
        transition: 10
        brightness_pct: "{{ 100 if is_state('media_player.living_room_vizio', 'off') else 50 }}"

  wait_master_bedroom_lights_off:
    sequence:
    - wait_template: "{{ is_state('light.master_bedroom', 'off') }}"
      timeout: '08:00:00'
      continue_on_timeout: false
    - service: light.turn_on
      entity_id: light.tea_lights
      data:
        brightness_pct: 100

  christmas_tree_on:
    sequence:
    - condition: state
      entity_id: input_boolean.christmas
      state: 'on'
    - service: light.turn_on
      entity_id: 
      - light.christmas_tree
      - light.star_lights
    - wait_template: "{{ is_state('light.dining_room', 'off') }}"
      timeout: '08:00:00'
      continue_on_timeout: false
    - condition: state
      entity_id: input_boolean.sleep_mode
      state: 'off'
    - service: light.turn_on
      entity_id: light.portable_mini_christmas_tree

  christmas_lights_on:
    sequence:
    - condition: state
      entity_id: input_boolean.christmas
      state: 'on'
    - service: light.turn_on
      entity_id: 
      - light.christmas_lights
    - wait_template: "{{ is_state('media_player.living_room_vizio', 'off') or is_state('input_boolean.lr_tv_ir', 'on') }}"
      timeout: '08:00:00'
      continue_on_timeout: false
    - condition: state
      entity_id: input_boolean.sleep_mode
      state: 'off'
    - service: light.turn_on
      entity_id:
      - light.christmas_tree
      - light.portable_mini_christmas_tree
      - light.star_lights

  christmas_lights_off:
    sequence:
    - condition: state
      entity_id: input_boolean.christmas
      state: 'on'
    - service: homeassistant.turn_off
      entity_id: group.lights_christmas

  brightness_preset:
    sequence:
    - service: mqtt.publish
      data:
        topic: "cmnd/{{ device }}/dimmer"
        payload: "{{ brightness_pct }}"