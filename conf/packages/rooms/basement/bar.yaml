automation:
- alias: Turn bar lights on with motion - office night
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.basement_motion
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: light.basement_hallway
    state: 'on'
  - condition: state
    entity_id: light.bar_lights
    state: 'off'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.auto_bar_lights
  - service: light.turn_on
    entity_id: light.bar_lights
    data:
      brightness_pct: 10
      color_temp: 370


- alias: Turn bar lights off with motion - office night
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.basement_motion
    from: 'on'
    to: 'off'
    for: '00:05:00'
  condition:
  - condition: state
    entity_id: input_boolean.auto_bar_lights
    state: 'on'
  action:
  - service: homeassistant.turn_off
    entity_id:
    - input_boolean.auto_bar_lights
    - light.bar_lights


- alias: Disable auto bar lights if bar lights manually changed
  initial_state: true
  trigger:
  - platform: state
    entity_id: light.bar_lights
  condition:
  - "{{ trigger.to_state.state != 'off' }}"
  - condition: state
    entity_id: input_boolean.auto_bar_lights
    state: 'on'
    for: '00:00:05'
  action:
  - service: homeassistant.turn_off
    entity_id: input_boolean.auto_bar_lights


- alias: Set bar lights color temp based on basement main lights  # not a tasmota rule because of the condition
  initial_state: true
  trigger:
  - platform: state
    entity_id: light.basement_main
    to:
    - 'off'
    - 'on'
  condition:
  - "{{ state_attr('light.bar_lights', 'rgb_color') == None }}"
  action:
  - service: mqtt.publish
    data:
      topic: 'cmnd/bar_lights/ct'
      payload: "{{ 370 if trigger.to_state.state == 'off' else 275 }}"


light:
- platform: group
  name: Bar lights
  entities:
  - light.bar_front
  - light.bar_side


input_boolean:
  auto_bar_lights: