automation:
- alias: Good morning - workday
  initial_state: true
  trigger:
  - platform: time
    at: '06:30:00'
  condition:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: state
        entity_id: device_tracker.andy_phone
        state: 'home'
      - condition: template
        value_template: "{{ as_timestamp(now()) | timestamp_custom('%d') == as_timestamp(state_attr('calendar.andy_work', 'start_time')) | timestamp_custom('%d') }}"
    - condition: template
      value_template: "{{ as_timestamp(now()) | timestamp_custom('%d') == as_timestamp(state_attr('calendar.work', 'start_time')) | timestamp_custom('%d') }}"
  - condition: template
    value_template: "{{ states('alarm_control_panel.abode') in ['armed_home', 'disarmed'] }}"
  action:
  - service: script.turn_on
    entity_id: script.good_morning
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'on'
  - service: script.lights_sunset


- alias: Turn fan off in morning
  initial_state: true
  trigger:
  - platform: time
    at: 
    - '07:00:00'
    - '07:15:00'
  condition:
  - condition: or
    conditions:
    - condition: template  # workday
      value_template: >
        {{ 
          ((as_timestamp(now()) | timestamp_custom('%d') == as_timestamp(state_attr('calendar.andy_work', 'start_time')) | timestamp_custom('%d')) 
          and as_timestamp(now()) | timestamp_custom('%M') | int < 15)
        }}
    - condition: template  # day off
      value_template: >
        {{ 
          ((as_timestamp(now()) | timestamp_custom('%d') != as_timestamp(state_attr('calendar.andy_work', 'start_time')) | timestamp_custom('%d')) 
          and as_timestamp(now()) | timestamp_custom('%M') | int > 10)
        }}
  action:
  - service: homeassistant.turn_off
    entity_id:
    - input_boolean.sleep_mode
    - input_boolean.andy_sleep
    - climate.master_bedroom_fan
  - service: switch.turn_on
    entity_id: switch.air_freshener


- alias: Turn bedroom lights off when curtains opened during day
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.master_bedroom_curtains
    to: 'on'
  condition:
  - condition: state
    entity_id: light.master_bedroom
    state: 'on'
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'off'
  action:
  - service: light.turn_off
    entity_id: light.master_bedroom


- alias: Turn master bedroom night light on with lights
  initial_state: true
  mode: parallel
  trigger:
  - platform: state
    entity_id: light.matt_hk
    to: 'off'
  - platform: state
    entity_id: input_boolean.dark_inside
    to: 'on'
    for: '00:30:00'
  condition:
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'on'
    for: '00:30:00'
  - condition: state
    entity_id: alarm_control_panel.abode
    state:
    - 'armed_home'
    - 'disarmed'
  - condition: state
    entity_id:
    - input_boolean.sleep_mode
    - input_boolean.andy_sleep
    state: 'off'
  action:
  - service: light.turn_on
    entity_id: light.master_bedroom_night_light
    data:
      brightness_pct: 100


- alias: Turn master bedroom night light off with lights
  initial_state: true
  mode: parallel
  trigger:
  - platform: state
    entity_id: light.matt_hk
    to: 'on'
  condition:
  - condition: state
    entity_id: alarm_control_panel.abode
    state:
    - 'armed_home'
    - 'disarmed'
  - condition: state
    entity_id:
    - input_boolean.sleep_mode
    - input_boolean.andy_sleep
    state: 'off'
  action:
  - service: light.turn_off
    entity_id: light.master_bedroom_night_light


- alias: Transition master bedroom lights to warm
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.dark_inside
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: light.matt_hk
    state: 'on'
  action:
  - service: light.turn_on
    entity_id: light.master_bedroom
    data:
      kelvin: 3000
      brightness_pct: 100
      transition: 20


script:
  good_morning:
    alias: Workday wakeup routine
    sequence:
    - service: script.turn_on
      entity_id: script.lights_wakeup
    - service: homeassistant.turn_off
      entity_id:
      - input_boolean.sleep_mode
      - input_boolean.andy_sleep
    - service: media_player.volume_mute
      entity_id: media_player.living_room_speaker
      data:
        is_volume_muted: true
    - service: media_player.volume_set
      data:
        entity_id: media_player.bedroom_speaker
        volume_level: 0.4
    - service: media_player.volume_mute
      entity_id: media_player.living_room_speaker
      data:
        is_volume_muted: false
    - condition: state
      entity_id: input_boolean.christmas
      state: 'on'
    - service: switch.turn_on
      entity_id: switch.christmas_tree
  
  lights_wakeup:
    sequence:
    - service: light.turn_on
      entity_id: light.master_bedroom
      data:
        brightness: 1
        kelvin: 2000
    - delay: '00:02:00'
    - service: light.turn_on
      entity_id: light.master_bedroom
      data:
        transition: 180
        brightness_pct: 100
        kelvin: 3000


switch:
- platform: template
  switches:
    bedroom_fan:
      friendly_name: Bedroom fan
      value_template: "{{ is_state('switch.master_bedroom_fan_plug', 'on') }}"
      turn_on:
        service: &power script.toggle_bedroom_fan
      turn_off:
        service: *power


climate:
- platform: generic_thermostat
  name: Master bedroom fan
  heater: switch.master_bedroom_fan_plug
  ac_mode: true
  target_sensor: sensor.master_bedroom_temp_calibrated
  min_temp: 63
  max_temp: 75
  cold_tolerance: 0
  hot_tolerance: 1