automation:
- alias: Good morning - workday
  initial_state: true
  trigger:
  - platform: time
    at: &wakeup_time input_datetime.lights_wakeup
  condition:
  - condition: or
    conditions:
    - condition: template
      value_template: "{{ as_timestamp(now()) | timestamp_custom('%d') == as_timestamp(state_attr('calendar.andy_work', 'start_time')) | timestamp_custom('%d') }}"
    - condition: template
      value_template: "{{ as_timestamp(now()) | timestamp_custom('%d') == as_timestamp(state_attr('calendar.work', 'start_time')) | timestamp_custom('%d') }}"
  - condition: template
    value_template: "{{ states('input_text.abode') in ['armed_home', 'disarmed'] }}"
  - condition: or
    conditions:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
    - condition: numeric_state
      entity_id: sensor.master_bedroom_light_level
      below: 20
  action:
  - service: script.turn_on
    entity_id: script.good_morning
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'on'
  - condition: state
    entity_id: sun.sun
    state: 'below_horizon'
  - service: script.lights_sunset


- alias: Set workday wakeup time
  initial_state: true
  trigger:
  - platform: template
    value_template: "{{ is_state_attr('calendar.andy_work', 'message', 'Work') }}"
  - platform: template
    value_template: "{{ 'from home' in state_attr('calendar.andy_work', 'message') }}"
  action:
  - service: input_datetime.set_datetime
    entity_id: *wakeup_time
    data:
      time: "{{ '06:50:00' if is_state_attr('calendar.andy_work', 'message', 'Work') else '07:15:00' }}"


- alias: Stop white noise
  initial_state: true
  trigger:
  - platform: time
    at: '06:20:00'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_boolean.sleep_mode
      state: 'on'
    - condition: state
      entity_id: input_boolean.andy_sleep
      state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.stop_white_noise


- alias: Reset volume after extra sleep
  initial_state: true
  trigger:
  - platform: state
    entity_id: media_player.bedroom_speaker
    to:
    - 'idle'
    - 'off'
  - platform: state
    entity_id: media_player.bedroom_speaker
    to: 'paused'
    for: '00:00:15'
  condition:
  - condition: state
    entity_id: input_boolean.extra_sleep
    state: 'on'
  action:
  - service: homeassistant.turn_off
    entity_id: 
    - input_boolean.extra_sleep
    - input_boolean.sleep_mode
    - media_player.bedroom_speaker
  - service: media_player.volume_mute
    entity_id: media_player.bedroom_speaker
    data:
      is_volume_muted: true
  - service: media_player.volume_set
    data:
      entity_id: media_player.bedroom_speaker
      volume_level: 0.4
  - service: media_player.volume_mute
    entity_id: media_player.bedroom_speaker
    data:
      is_volume_muted: false


- alias: Turn fan off in morning
  initial_state: true
  trigger:
  - platform: time
    at: 
    - '07:00:00'
    - '07:15:00'
  condition:
  - condition: or
    conditions:
    - condition: template  # workday
      value_template: >
        {{ 
          ((as_timestamp(now()) | timestamp_custom('%d') == as_timestamp(state_attr('calendar.andy_work', 'start_time')) | timestamp_custom('%d')) 
          and as_timestamp(now()) | timestamp_custom('%M') | int < 15)
        }}
    - condition: template  # day off
      value_template: >
        {{ 
          ((as_timestamp(now()) | timestamp_custom('%d') != as_timestamp(state_attr('calendar.andy_work', 'start_time')) | timestamp_custom('%d')) 
          and as_timestamp(now()) | timestamp_custom('%M') | int > 10)
        }}
  action:
  - service: homeassistant.turn_off
    entity_id:
    - input_boolean.sleep_mode
    - input_boolean.andy_sleep
    - climate.master_bedroom_fan
  - service: switch.turn_on
    entity_id: switch.air_freshener


script:
  good_morning:
    alias: Workday wakeup routine
    sequence:
    - service: script.turn_on
      entity_id: script.lights_wakeup
    - service: homeassistant.turn_off
      entity_id:
      - input_boolean.sleep_mode
      - input_boolean.andy_sleep
      - light.master_bath_night_light
    - service: media_player.volume_mute
      entity_id: media_player.living_room_speaker
      data:
        is_volume_muted: true
    - service: media_player.volume_set
      data:
        entity_id: media_player.bedroom_speaker
        volume_level: 0.4
    - service: media_player.volume_mute
      entity_id: media_player.living_room_speaker
      data:
        is_volume_muted: false
    - service: script.turn_on 
      entity_id: script.alarm_disarm
    - condition: state
      entity_id: input_boolean.christmas
      state: 'on'
    - service: light.turn_on
      entity_id: 
      - light.christmas_tree
      - light.mini_christmas_tree
  

  lights_wakeup:
    sequence:
    - service: light.turn_on
      entity_id: &lights_wakeup light.master_bedroom
      data:
        brightness: 1
        color_name: orange
    - delay: '00:02:00'
    - condition: state
      entity_id: *lights_wakeup
      state: 'on'
    - service: light.turn_on
      entity_id: *lights_wakeup
      data:
        transition: 180
        brightness_pct: 100
        kelvin: 3000


  stop_white_noise:
    sequence:
    - service: script.turn_on
      entity_id: script.volume_transition_to_zero
    - wait_template: "{{ is_state('script.volume_transition_to_zero', 'off') }}"
      timeout: '00:01:00'
      continue_on_timeout: true
    - service: homeassistant.turn_off
      entity_id: 
      - media_player.bedroom_speaker
      - input_boolean.white_noise
    - service: media_player.volume_mute
      entity_id: media_player.bedroom_speaker
      data:
        is_volume_muted: true
    - service: media_player.volume_set
      data:
        entity_id: media_player.bedroom_speaker
        volume_level: 0.4
    - service: media_player.volume_mute
      entity_id: media_player.bedroom_speaker
      data:
        is_volume_muted: false


  volume_transition_to_zero:
    sequence:
      repeat:
        sequence:
        - service: media_player.volume_set
          entity_id: media_player.bedroom_speaker
          data_template:
            volume_level: "{{ state_attr('media_player.bedroom_speaker', 'volume_level') | float - 0.01 }}"
        - delay: '0.25'
        until:
        - condition: template
          value_template: "{{ state_attr('media_player.bedroom_speaker', 'volume_level') | float < 0.10 }}"


input_boolean:
  extra_sleep:


input_datetime:
  lights_wakeup:
    has_time: true
    has_date: false