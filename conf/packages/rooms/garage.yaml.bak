automation:
- alias: Turn garage door lights on with garage door
  initial_state: true
  trigger:
  - platform: state
    entity_id: &garage_door binary_sensor.garage_door
    to:
    - 'on'
    - 'off'
  - platform: state
    entity_id: sun.sun
    to: 'below_horizon'
  action:
  - choose:
    - conditions:
      - "{{ trigger.to_state.state in ['on', 'below_horizon'] }}" # when the garage door is opened or is already open at sunset, turn the garage lights on
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: *garage_door
        state: 'on'
      sequence:
      - service: switch.turn_on
        entity_id: &garage_lights switch.garage_lights
    - conditions:
      - "{{ trigger.to_state.state == 'off' }}" # when the garage door is closed and the service door isn't open, turn the garage lights on and keep them on
      - condition: state
        entity_id:
        - &service_door binary_sensor.garage_service_door
        - *garage_lights
        state: 'off'
      sequence:
      - service: homeassistant.turn_on
        entity_id:
        - *garage_lights
        - &garage_lights_hold input_boolean.garage_lights_hold


- alias: Turn garage door lights on with service door
  initial_state: true
  trigger:
  - platform: state
    entity_id: *service_door
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: 
    - *service_door
    - *garage_lights_hold
    from: 'on'
    to: 'off'
    for: '00:02:00'
  action:
  - choose:
    - conditions:
      - "{{ trigger.to_state.state == 'on' }}" # when the service door is opened and the sun is below horizon or the garage door is closed, turn on garage lights
      - condition: or
        conditions:
        - condition: state
          entity_id: sun.sun
          state: 'below_horizon'
        - condition: state
          entity_id: *garage_door
          state: 'off'
      sequence:
      - service: switch.turn_on
        entity_id: *garage_lights
    - conditions:
      - "{{ trigger.to_state.state == 'on' }}" # when the service door is opened after the garage lights were being held on, turn off the hold boolean
      - condition: state
        entity_id: *garage_lights_hold
        state: 'on'
      sequence:
      - service: input_boolean.turn_off
        entity_id: *garage_lights_hold
    - conditions:
      - "{{ trigger.to_state.state == 'off' }}" # when the service door is closed and the garage lights hold is off, turn off the garage lights
      - condition: state
        entity_id: *garage_lights_hold
        state: 'off'
      sequence:
      - service: switch.turn_off
        entity_id: *garage_lights


- alias: End garage lights hold
  initial_state: true
  trigger:
  - platform: state
    entity_id: *garage_lights_hold
    to: 'on'
    for: '00:05:00'
  action:
  - service: input_boolean.turn_off
    entity_id: *garage_lights_hold


cover:
  - platform: mqtt
    name: Garage door
    command_topic: "cmnd/garage_door/POWER"
    state_topic: "stat/garage_door/status"
    availability_topic: "tele/garage_door/LWT"
    qos: 1
    payload_available: "Online"
    payload_not_available: "Offline"
    payload_open: "ON"
    payload_close: "ON"
    payload_stop: "ON"
    state_open: "open"
    state_closed: "closed"
    device_class: garage


input_boolean:
  garage_lights_hold: