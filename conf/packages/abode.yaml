automation:
- alias: Notify when sensor unresponsive
  initial_state: true
  trigger:
  - platform: template
    value_template: >
      {% set front = state_attr('binary_sensor.front_door', 'no_response') %}
      {% set balcony = state_attr('binary_sensor.balcony_door', 'no_response') %}
      {% set drawer = state_attr('binary_sensor.drawer', 'no_response') %}
      {% set keypad = state_attr('binary_sensor.keypad', 'no_response') %}
      {% set camera = state_attr('camera.motion_camera', 'no_response') %}
      {{ front == true or balcony == true or drawer == true or keypad == true or camera == true }}
  action:
  - service: notify.mobile_app_pixel_xl
    data_template:
      title: "Sensor unresponsive"
      message: "{{ trigger.to_state.name }} sensor is not responding"


- alias: Turn porch light on when armed home
  initial_state: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.abode
    to: 'armed_home'
  - platform: time
    at: '22:00:00'
  condition:
  - condition: time
    after: '22:00:00'
    before: '05:00:00'
  - condition: state
    entity_id: alarm_control_panel.abode
    state: 'armed_home'
  action:
  - service: light.turn_on
    data:
      entity_id: light.porch_light
      kelvin: 4000
      brightness_pct: 50


- alias: Toggle vacation mode
  initial_state: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.abode
    to: 'armed_away'
    for: '24:00:00'
  - platform: state
    entity_id: alarm_control_panel.abode
    from: 'armed_away'
    to: 'disarmed'
  action:
  - service_template: "input_boolean.turn_{{ 'on' if is_state('alarm_control_panel.abode', 'armed_away') else 'off' }}"
    entity_id: input_boolean.vacation_mode


- alias: Vacation mode lights on
  initial_state: true
  trigger:
  - platform: time
    at: '21:00:00'
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  action:
  - delay:
      seconds: "{{ range(0,600) | random | int }}"
  - service: hue.hue_activate_scene
    data:
      group_name: Living room
      scene_name: Read
  - service: hue.hue_activate_scene
    data:
      group_name: Dining room
      scene_name: Read


- alias: Vacation mode photo
  initial_state: true
  trigger:
  - platform: time
    at: '22:00:00'
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  action:
  - service: abode.capture_image
    entity_id: camera.motion_camera


- alias: Vacation mode lights off
  initial_state: true
  trigger:
  - platform: time
    at: '22:45:00'
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  action:
  - delay:
      seconds: "{{ range(0,600) | random | int }}" 
  - service: light.turn_off
    entity_id: all


- alias: Turn lights on when alarm triggered
  initial_state: true
  trigger:
  - platform: event
    event_type: abode_alarm
  condition:
  - condition: state
    entity_id: alarm_control_panel.abode
    state: armed_away
  - condition: state
    entity_id: binary_sensor.dark_inside
    state: 'on'
  action:
  - service: hue.hue_activate_scene
    data:
      group_name: Living room
      scene_name: Red
  - service: hue.hue_activate_scene
    data:
      group_name: Dining room
      scene_name: Read
  - service: hue.hue_activate_scene
    data:
      group_name: Game room
      scene_name: Red
  - service: hue.hue_activate_scene
    data:
      group_name: Master bedroom
      scene_name: Red


sensor:
- platform: template
  sensors:
    alarm_mode:
      friendly_name: "Alarm mode"
      value_template: "{{ states('alarm_control_panel.abode').capitalize().replace('_',' ') }}"
      icon_template: >
        {% set alarm = states('alarm_control_panel.abode') %}
        {% if alarm == 'armed_home' %}
          mdi:home-lock
        {% elif alarm == 'armed_away' %}
          mdi:lock
        {% elif alarm == 'disarmed' %}
          mdi:lock-open-outline
        {% else %}
          mdi:lock-question
        {% endif %}
    

- platform: rest
  resource: !secret abode_rest
  name: Abode
  value_template: "{{ value_json['updates']['em_ver'] }}"
  scan_interval: 43200


script:
  alarm_arm_home:
    sequence:
    - condition: state
      entity_id: alarm_control_panel.abode
      state: 'disarmed'
    - service: alarm_control_panel.alarm_arm_home
      entity_id: alarm_control_panel.abode


input_boolean:
  sensor_tripped:
  disarmed_app:
  vacation_mode: