automation:
- alias: Auto-arm alarm home
  initial_state: true
  trigger:
  - platform: time
    at: '00:00:00'
  condition:
  - condition: state
    entity_id: alarm_control_panel.abode
    state: 'disarmed'
  action:
  - service: alarm_control_panel.alarm_arm_home
    entity_id: alarm_control_panel.abode


- alias: Alarm armed home reminder  # throttled - 10 minutes
  initial_state: true
  trigger:
  - platform: state
    entity_id: binary_sensor.entrance_motion
    to: 'on'
  condition:
  - condition: template
    value_template: "{{ (as_timestamp(now()) - as_timestamp(state_attr('automation.alarm_armed_home_reminder', 'last_triggered'))) / 60 > 10 }}"
  - condition: state
    entity_id: alarm_control_panel.abode
    state: 'armed_home'
  action:
  - service: scene.create
    data:
      scene_id: before_alarm_reminder
      snapshot_entities:
      - light.buffet
  - service: light.turn_on
    entity_id: light.buffet
    data:
      color_name: blue
      brightness_pct: 100
  - delay: '00:00:10'
  - service: scene.turn_on
    entity_id: scene.before_alarm_reminder


- alias: Notify when sensor unresponsive
  initial_state: true
  trigger:
  - platform: template
    value_template: >
      {% set front = state_attr('binary_sensor.front_door_cloud', 'no_response') %}
      {% set balcony = state_attr('binary_sensor.balcony_door_cloud', 'no_response') %}
      {% set drawer = state_attr('binary_sensor.drawer_cloud', 'no_response') %}
      {% set keypad = state_attr('binary_sensor.keypad_cloud', 'no_response') %}
      {% set camera = state_attr('camera.motion_camera', 'no_response') %}
      {{ front == true or balcony == true or drawer == true or keypad == true or camera == true }}
  action:
  - service: notify.mobile_app_pixel_xl
    data_template:
      title: "Sensor unresponsive"
      message: "{{ trigger.to_state.name }} sensor is not responding"


- alias: Turn porch light on at night
  initial_state: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.abode
    to: 
    - 'armed_home'
    - 'disarmed'
  - platform: time
    at: '22:00:00'
  condition:
  - condition: time
    after: '22:00:00'
    before: '05:00:00'
  - condition: template
    value_template: "{{ states('alarm_control_panel.abode') in ['armed_home', 'disarmed'] or is_state('input_boolean.vacation_mode', 'on') }}"
  action:
  - service: script.porch_light_security


- alias: Record previous alarm mode when unavailable
  initial_state: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.abode_cloud
    to: 'unavailable'
  action:
  - service: input_text.set_value
    entity_id: input_text.prev_alarm_mode
    data_template:
      value: "{{ trigger.from_state.state }}"


- alias: Toggle vacation mode
  initial_state: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.abode
    to: 'armed_away'
    for: '24:00:00'
  - platform: state
    entity_id: alarm_control_panel.abode
    from: 'armed_away'
    to: 'disarmed'
  action:
  - service_template: "input_boolean.turn_{{ 'on' if is_state('alarm_control_panel.abode', 'armed_away') else 'off' }}"
    entity_id: input_boolean.vacation_mode


- alias: Vacation mode lights on
  initial_state: true
  trigger:
  - platform: time
    at: '21:00:00'
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  action:
  - delay:
      seconds: "{{ range(30,600) | random | int }}"
  - service: light.turn_on
    entity_id:
    - light.buffet
    - light.living_room
    data:
      kelvin: 3000
      brightness_pct: 100
  - service: light.turn_on
    entity_id: light.kitchen_cabinets
  - delay:
      seconds: "{{ range(900,1800) | random | int }}"
  - service: light.turn_on
    entity_id: light.game_room
    data:
      kelvin: 3000
      brightness_pct: 100
  - delay:
      seconds: "{{ range(1800,2400) | random | int }}"
  - service: light.turn_off
    entity_id: 
    - light.game_room
    - light.living_room
  - service: light.turn_on
    entity_id: light.master_bedroom
    data:
      kelvin: 3000
      brightness_pct: 100


- alias: Vacation mode lights off
  initial_state: true
  trigger:
  - platform: time
    at: '23:45:00'
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'on'
  action:
  - delay:
      seconds: "{{ range(30,600) | random | int }}" 
  - service: homeassistant.turn_off
    entity_id: group.lights_interior


- alias: Security system triggered
  initial_state: true
  trigger:
  - platform: event
    event_type: abode_alarm
  condition:
  - condition: state
    entity_id: alarm_control_panel.abode
    state: armed_away
  - condition: state
    entity_id: input_boolean.dark_inside
    state: 'on'
  action:
  - service: light.turn_on
    entity_id:
    - light.buffet
    - light.living_room
    data:
      brightness_pct: 100
      kelvin: 3000
      transition: 5


sensor:
- platform: template
  sensors:
    alarm_mode:
      friendly_name: "Alarm mode"
      value_template: "{{ states('alarm_control_panel.abode').capitalize().replace('_',' ') }}"
      icon_template: >
        {% set alarm = states('alarm_control_panel.abode') %}
        {% if alarm == 'armed_home' %}
          mdi:home-lock
        {% elif alarm == 'armed_away' %}
          mdi:lock
        {% elif alarm == 'disarmed' %}
          mdi:lock-open-outline
        {% else %}
          mdi:lock-question
        {% endif %}
    

- platform: rest
  resource: !secret abode_rest
  name: Abode firmware version
  value_template: "{{ value_json['updates']['em_ver'] }}"
  scan_interval: 43200


script:
  alarm_arm_home:
    sequence:
    - condition: state
      entity_id: alarm_control_panel.abode
      state: 'disarmed'
    - service: alarm_control_panel.alarm_arm_home
      entity_id: alarm_control_panel.abode
    - delay: '00:00:10'
    - condition: template
      value_template: "{{ not is_state('alarm_control_panel.abode', 'armed_home') }}"
    - service: alarm_control_panel.alarm_arm_home
      entity_id: alarm_control_panel.abode_cloud

  porch_light_security:
    sequence:
    - condition: state
      entity_id: input_boolean.extra_sleep
      state: 'off'
    - service: light.turn_on
      entity_id: light.porch_light
      data:
        kelvin: 4000
        brightness_pct: 50
        transition: 0.4
    - service: input_text.set_value
      entity_id: input_text.porch_light_color
      data:
        value: 'white'


input_boolean:
  vacation_mode:

input_text:
  prev_alarm_mode: