# automation:
# - alias: Alarm armed home reminder
#   initial_state: true
#   trigger:
#   - platform: state
#     entity_id: binary_sensor.entrance_motion
#     to: 'on'
#   condition:
#   - condition: state
#     entity_id: input_text.alarm
#     state: 'armed_home'
#   action:
#   - service: mqtt.publish
#     data:
#       topic: 'cmnd/entrance_light/Backlog'
#       payload: 'dimmer 0; sleep 1; dimmer 100; sleep 1; dimmer 0; sleep 1; dimmer 100; sleep 1; dimmer 0; sleep 1; dimmer 100'


# - alias: Notify when sensor unresponsive
#   initial_state: true
#   trigger:
#   - platform: template
#     value_template: >
#       {% set front = state_attr('binary_sensor.front_door_cloud', 'no_response') %}
#       {% set balcony = state_attr('binary_sensor.balcony_door_cloud', 'no_response') %}
#       {% set drawer = state_attr('binary_sensor.drawer_cloud', 'no_response') %}
#       {% set keypad = state_attr('binary_sensor.keypad_cloud', 'no_response') %}
#       {% set camera = state_attr('camera.motion_camera', 'no_response') %}
#       {{ front == true or balcony == true or drawer == true or keypad == true or camera == true }}
#   action:
#   - service: notify.mobile_app_matt_phone
#     data_template:
#       title: "Sensor unresponsive"
#       message: "{{ trigger.to_state.name }} sensor is not responding"




# - alias: Security system triggered
#   initial_state: true
#   trigger:
#   - platform: event
#     event_type: abode_alarm
#   condition:
#   - condition: state
#     entity_id: input_text.alarm
#     state: 'armed_away'
#   - condition: state
#     entity_id: input_boolean.dark_inside
#     state: 'on'
#   action:
#   - service: light.turn_on
#     entity_id:
#     - light.buffet
#     - light.living_room
#     data:
#       brightness_pct: 100
#       kelvin: 3000
#       transition: 5


# sensor:
# - platform: template
#   sensors:
#     alarm_mode:
#       friendly_name: "Abode"
#       value_template: "{{ states('input_text.alarm').capitalize().replace('_',' ') }}"
#       icon_template: >
#         {% set alarm = states('input_text.alarm') %}
#         {% if alarm in ['armed_home', 'armed_night'] %}
#           mdi:home-lock
#         {% elif alarm == 'armed_away' %}
#           mdi:lock
#         {% elif alarm == 'disarmed' %}
#           mdi:lock-open-outline
#         {% else %}
#           mdi:lock-question
#         {% endif %}
    

# switch:
# - platform: rest
#   name: Arm alarm home
#   resource: !secret alarm_arm_url
#   state_resource: !secret alarm_status_url
#   is_on_template: "{{ value_json.updates.mode_a1 == 'Home Arm 1' }}"
#   method: post
#   body_on: 'area=1&mode=2'
#   body_off: &disarm 'area=1&mode=0'
#   headers:
#     Authorization: !secret alarm_auth

# - platform: rest
#   name: Arm disarm
#   resource: !secret alarm_arm_url
#   state_resource: !secret alarm_status_url
#   is_on_template: "{{ value_json.updates.mode_a1 == 'Disarm' }}"
#   method: post
#   body_on: 'area=1&mode=0'
#   headers:
#     Authorization: !secret alarm_auth

# script:
  # alarm_arm_home:
  #   sequence:
  #   - service: alarm_control_panel.alarm_arm_home
  #     entity_id: alarm_control_panel.home
  #   - delay: '00:00:10'
  #   - condition: template
  #     value_template: "{{ not is_state('input_text.alarm', 'armed_home') }}"
  #   - service: alarm_control_panel.alarm_arm_home
  #     entity_id: alarm_control_panel.home_cloud

  # alarm_arm_away:
  #   sequence:
  #   - service: alarm_control_panel.alarm_arm_away
  #     entity_id: alarm_control_panel.home
  #   - delay: '00:00:10'
  #   - condition: template
  #     value_template: "{{ not is_state('input_text.alarm', 'armed_home') }}"
  #   - service: alarm_control_panel.alarm_arm_away
  #     entity_id: alarm_control_panel.home_cloud

  # alarm_disarm:
  #   sequence:
  #   - service: alarm_control_panel.alarm_disarm
  #     entity_id: alarm_control_panel.home
  #   - delay: '00:00:10'
  #   - condition: template
  #     value_template: "{{ not is_state('input_text.alarm', 'disarmed') }}"
  #   - service: alarm_control_panel.alarm_disarm
  #     entity_id: alarm_control_panel.home_cloud


