automation:
- alias: Game room table remote
  initial_state: true
  mode: parallel
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Game room table remote/click
    # first button: turn lights off except game room
    # second button: turn other lights back on
  action:
  - service_template: >
      {% set command = trigger.payload %}
      {% if command == 'power' %}
        script.other_lights_off
      {% else %}
        script.other_lights_on
      {% endif %}


script:
  other_lights_off:
    sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.other_lights_off
    - service: light.turn_off
      entity_id:
      - light.living_room
      - light.buffet

  other_lights_on:
    sequence:
    - condition: template
      value_template: "{{ states('alarm_control_panel.abode') in ['armed_home', 'disarmed'] }}"
    - condition: state
      entity_id: input_boolean.dark_inside
      state: 'on'
    - condition: state
      entity_id: input_boolean.andy_sleep
      state: 'off'
    - condition: state
      entity_id: input_boolean.sleep_mode
      state: 'off'
    - condition: state
      entity_id: media_player.living_room_vizio
      state: 'off'
    - condition: state
      entity_id: input_boolean.other_lights_off
      state: 'on'
    - service: input_boolean.turn_off
      entity_id: input_boolean.other_lights_off
    - service: light.turn_on
      entity_id: light.buffet
      data:
        kelvin: 3000
        brightness_pct: 100
    - service: hue.hue_activate_scene
      data:
        group_name: Living room
        scene_name: Read lamps

  move_music_all:
    alias: Move music to all speakers
    sequence:
    - service: media_player.play_media
      entity_id: media_player.all_speakers
      data_template:
        media_content_id: "{{ state_attr('media_player.portable_speaker', 'media_content_id') }}"
        media_content_type: music
    - wait_template: "{{ state_attr('media_player.portable_speaker', 'media_content_id') == state_attr('media_player.living_room_speaker', 'media_content_id') }}"
      timeout: '00:00:20'
      continue_on_timeout: false
    - service: media_player.media_pause
      entity_id: media_player.all_speakers
    - service: media_player.media_play
      entity_id: media_player.all_speakers
    - service: media_player.turn_off
      entity_id: media_player.portable_speaker
    - service: input_boolean.turn_on
      entity_id: input_boolean.music_moved
    - delay: '00:00:20'
    - service: input_boolean.turn_off
      entity_id: input_boolean.music_moved

  move_music_portable:
    alias: Move music to portable speaker
    sequence:
    - service: media_player.play_media
      entity_id: media_player.portable_speaker
      data_template:
        media_content_id: "{{ state_attr('media_player.living_room_speaker', 'media_content_id') }}"
        media_content_type: music
    - wait_template: "{{ state_attr('media_player.portable_speaker', 'media_content_id') == state_attr('media_player.living_room_speaker', 'media_content_id') }}"
      timeout: '00:00:20'
      continue_on_timeout: false
    - service: media_player.media_pause
      entity_id: media_player.portable_speaker
    - service: media_player.media_play
      entity_id: media_player.portable_speaker
    - service: media_player.turn_off
      entity_id: 
      - media_player.living_room_speaker
      - media_player.kitchen_speaker
      - media_player.bedroom_speaker
      - media_player.hub
    - service: input_boolean.turn_on
      entity_id: input_boolean.music_moved
    - delay: '00:00:20'
    - service: input_boolean.turn_off
      entity_id: input_boolean.music_moved


input_boolean:
  other_lights_off:
  music_moved: