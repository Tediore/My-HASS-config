automation:
- alias: Game room desk remote
  initial_state: true
  mode: parallel
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Game room desk remote/click
    # first button: turn speaker off
    # second button: toggle speaker mute
    # third button: move music
  action:
  - service_template: >
      {% set command = trigger.payload %}
      {% if command == 'power' %}
        script.turn_off_portable_speaker
      {% elif command == 'colortemp' %}
        script.move_music_{{ 'all' if is_state('media_player.portable_speaker', 'playing') else 'portable' }}
      {% else %}
        script.toggle_mute_portable_speaker
      {% endif %}


script:
  turn_off_portable_speaker:
    sequence:
    - service: media_player.turn_off
      entity_id: media_player.portable_speaker

  toggle_mute_portable_speaker:
    sequence:
    - choose:
      - conditions:
        - condition: template
          value_template: "{{ is_state_attr('media_player.portable_speaker', 'app_name', 'Google Play Music') }}"
        sequence:
        - service: media_player.media_play_pause
          entity_id: media_player.portable_speaker
      default:
      - service: media_player.volume_mute
        entity_id: media_player.portable_speaker
        data_template:
          is_volume_muted: "{{ false if state_attr('media_player.portable_speaker', 'is_volume_muted') else true }}"