# automation:
# - alias: Matt's desk button
#   initial_state: true
#   trigger:
#   - platform: state
#     entity_id: sensor.matts_desk_button_action
#     to:
#     - 'on'
#     - 'off'
#     - 'brightness_move_down'
#     - 'brightness_move_up'
#   action:
#   - service: "script.{{ 'turn_off_portable_speaker' if 'brightness' in trigger.to_state.state else 'toggle_mute_portable_speaker' }}"


# # - alias: Game room desk remote
# #   initial_state: true
# #   mode: parallel
# #   trigger:
# #   - platform: mqtt
# #     topic: zigbee2mqtt/Game room desk remote/click
# #     # first button: turn speaker off
# #     # second button: toggle speaker mute
# #     # third button: move music
# #   action:
# #   - service_template: >
# #       {% set command = trigger.payload %}
# #       {% if command == 'power' %}
# #         script.turn_off_portable_speaker
# #       {% elif command == 'colortemp' %}
# #         script.move_music_{{ 'all' if is_state('media_player.office_speaker', 'playing') else 'portable' }}
# #       {% else %}
# #         script.toggle_mute_portable_speaker
# #       {% endif %}


# script:
#   turn_off_portable_speaker:
#     sequence:
#     - service: media_player.turn_off
#       entity_id: media_player.office_speaker

#   toggle_mute_portable_speaker:
#     sequence:
#     - choose:
#       - conditions:
#         - condition: template
#           value_template: "{{ is_state_attr('media_player.office_speaker', 'app_name', 'Google Play Music') }}"
#         sequence:
#         - service: media_player.media_play_pause
#           entity_id: media_player.office_speaker
#       default:
#       - service: media_player.volume_mute
#         entity_id: media_player.office_speaker
#         data_template:
#           is_volume_muted: "{{ false if state_attr('media_player.office_speaker', 'is_volume_muted') else true }}"

#   move_music_all:
#     alias: Move music to all speakers
#     sequence:
#     - service: media_player.play_media
#       entity_id: media_player.all_speakers
#       data_template:
#         media_content_id: "{{ state_attr('media_player.office_speaker', 'media_content_id') }}"
#         media_content_type: music
#     - wait_template: "{{ state_attr('media_player.office_speaker', 'media_content_id') == state_attr('media_player.living_room_speaker', 'media_content_id') }}"
#       timeout: '00:00:20'
#       continue_on_timeout: false
#     - service: media_player.media_pause
#       entity_id: media_player.all_speakers
#     - service: media_player.media_play
#       entity_id: media_player.all_speakers
#     - service: media_player.turn_off
#       entity_id: media_player.office_speaker
#     - service: input_boolean.turn_on
#       entity_id: input_boolean.music_moved
#     - delay: '00:00:20'
#     - service: input_boolean.turn_off
#       entity_id: input_boolean.music_moved

#   move_music_portable:
#     alias: Move music to portable speaker
#     sequence:
#     - service: media_player.play_media
#       entity_id: media_player.office_speaker
#       data_template:
#         media_content_id: "{{ state_attr('media_player.living_room_speaker', 'media_content_id') }}"
#         media_content_type: music
#     - wait_template: "{{ state_attr('media_player.office_speaker', 'media_content_id') == state_attr('media_player.living_room_speaker', 'media_content_id') }}"
#       timeout: '00:00:20'
#       continue_on_timeout: false
#     - service: media_player.media_pause
#       entity_id: media_player.office_speaker
#     - service: media_player.media_play
#       entity_id: media_player.office_speaker
#     - service: media_player.turn_off
#       entity_id: 
#       - media_player.living_room_speaker
#       - media_player.kitchen_speaker
#       - media_player.master_bedroom_clock
#       - media_player.hub
#     - service: input_boolean.turn_on
#       entity_id: input_boolean.music_moved
#     - delay: '00:00:20'
#     - service: input_boolean.turn_off
#       entity_id: input_boolean.music_moved


# input_boolean:
#   music_moved: