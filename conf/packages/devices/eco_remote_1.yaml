automation:
- alias: Ecosmart remote 1
  initial_state: true
  trigger:
  # Turn lights off (except game room)
  - platform: event
    event_type: zha_event
    event_data:
      command: 'off'
      device_ieee: !secret eco_remote_1_id
  - platform: event
    event_type: zha_event
    event_data:
      command: 'on'
      device_ieee: !secret eco_remote_1_id
  # Move music between all speakers and portable speaker
  - platform: event
    event_type: zha_event
    event_data:
      command: 'move_to_color_temp'
      device_ieee: !secret eco_remote_1_id
  # Turn other lights back on
  - platform: event
    event_type: zha_event
    event_data:
      command: 'move_to_level'
      device_ieee: !secret eco_remote_1_id
  action:
  - service_template: >
      {% set command = trigger.event.data.command %}
      {% if command in ['on', 'off'] %}
        script.other_lights_off
      {% elif command == 'move_to_color_temp' %}
        script.move_music_{{ 'all' if is_state('media_player.portable_speaker', 'playing') else 'portable' }}
      {% else %}
        script.other_lights_on
      {% endif %}


script:
  other_lights_off:
    sequence:
    - service: input_boolean.turn_on
      entity_id: input_boolean.other_lights_off
    - service: light.turn_off
      entity_id:
      - light.living_room
      - light.dining_room

  other_lights_on:
    sequence:
    - service: input_boolean.turn_off
      entity_id: input_boolean.other_lights_off
    - service: light.turn_on
      entity_id: light.dining_room
    - service: hue.hue_activate_scene
      data:
        group_name: Living room
        scene_name: Read lamps

  move_music_all:
    alias: Move music to all speakers
    sequence:
    - service: media_player.play_media
      entity_id: media_player.all_speakers
      data_template:
        media_content_id: "{{ state_attr('media_player.portable_speaker', 'media_content_id') }}"
        media_content_type: music
    - wait_template: "{{ state_attr('media_player.portable_speaker', 'media_content_id') == state_attr('media_player.living_room_speaker', 'media_content_id') }}"
      timeout: '00:00:20'
      continue_on_timeout: false
    - service: media_player.media_pause
      entity_id: media_player.all_speakers
    - service: media_player.media_play
      entity_id: media_player.all_speakers
    - service: media_player.turn_off
      entity_id: media_player.portable_speaker

  move_music_portable:
    alias: Move music to portable speaker
    sequence:
    - service: media_player.play_media
      entity_id: media_player.portable_speaker
      data_template:
        media_content_id: "{{ state_attr('media_player.living_room_speaker', 'media_content_id') }}"
        media_content_type: music
    - wait_template: "{{ state_attr('media_player.portable_speaker', 'media_content_id') == state_attr('media_player.living_room_speaker', 'media_content_id') }}"
      timeout: '00:00:20'
      continue_on_timeout: false
    - service: media_player.media_pause
      entity_id: media_player.portable_speaker
    - service: media_player.media_play
      entity_id: media_player.portable_speaker
    - service: media_player.turn_off
      entity_id: media_player.living_room_speaker


input_boolean:
  other_lights_off: