automation:
- alias: Start sleep mode cool early if idle
  initial_state: true
  trigger:
  - platform: time
    at: &cool_sleep_workday_early '21:00:00'
  - platform: time
    at: &cool_sleep_weekend_early '21:30:00'
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'cool'
  - condition: template
    value_template: "{{ not is_state_attr('climate.thermostat', 'hvac_action', 'cooling') and not is_state('sensor.tstat_profile', 'Sleep') }}"
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: or
    conditions:
    - condition: time
      after: *cool_sleep_workday_early
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      after: *cool_sleep_weekend_early
      weekday: ['fri', 'sat']
  action:
  - service: script.turn_on
    entity_id: script.tstat_cool_sleep
  - service: input_boolean.turn_on
    entity_id: input_boolean.tstat_smart


- alias: Start home schedule earlier - sound check
  initial_state: true
  trigger:
  - platform: time
    at: '06:20:00'
  condition:
  - condition: time
    weekday: sun
  - condition: template
    value_template: "{{ state_attr('calendar.church', 'message') != None and 'sound check' in state_attr('calendar.church', 'message').lower() }}"
  - condition: template
    value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
  action:
  - service: script.turn_on
    entity_id: script.good_morning
  - condition: template
    value_template: "{{ states('climate.thermostat') in ['cool', 'heat'] }}"
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - service_template: "script.{{ states('climate.thermostat') }}_home"
  - service: input_boolean.turn_on
    entity_id: input_boolean.tstat_smart


- alias: Ask to turn heat back on
  initial_state: true
  trigger:
  - platform: time
    at: &cool_sleep_workday '21:00:00'
  - platform: time
    at: &cool_sleep_weekend '21:30:00'
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.outside_temp
    below: 45
  - condition: or
    conditions:
    - condition: time
      after: *cool_sleep_workday
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      after: *cool_sleep_workday
      weekday: ['fri', 'sat']
  action:
  - service: notify.mobile_app_matt_phone
    data_template:
      title: "Turn heat back on in sleep mode?"
      message: "It's currently {{ states('sensor.outside_temp') | float | round(0) }}Â° outside."
      data:
        actions:
        - action: heat_reenable
          title: Turn heat on


- alias: Turn thermostat off if window opened
  initial_state: true
  trigger:
  - platform: state
    entity_id: &windows group.windows
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: *windows
    from: 'on'
    to: 'off'
    for: '00:01:00'
  action:
  - choose:
    - conditions:
      - "{{ trigger.to_state.state == 'on' }}"
      - condition: state
        entity_id: &window_bool input_boolean.tstat_window_off
        state: 'off'
      sequence:
      - service: climate.turn_off
        entity_id: climate.thermostat
      - service: input_boolean.turn_on
        entity_id: *window_bool
    default:
    - service: input_boolean.turn_on
      entity_id: input_boolean.tstat_sched_resume
    - service: input_boolean.turn_off
      entity_id: *window_bool


- alias: Record previous thermostat mode
  initial_state: true
  trigger:
  - platform: state
    entity_id: climate.thermostat
    from:
    - 'heat'
    - 'cool'
    to: 'off'
  action:
  - service: input_text.set_value
    entity_id: input_text.tstat_prev_mode
    data_template:
      value: "{{ trigger.from_state.state }}"


- alias: Resume tstat schedule - set mode
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.tstat_sched_resume
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.tstat_peak_savings
    from: 'on'
    to: 'off'
  action:
  - service: climate.set_temperature
    entity_id: climate.thermostat
    data:
      temperature: "{{ 65 if is_state('input_text.tstat_prev_mode', 'heat') else 80 }}"
      hvac_mode: "{{ states('input_text.tstat_prev_mode') }}"
  - wait_template: "{{ states('climate.thermostat') == states('input_text.tstat_prev_mode') }}"
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_sched_resume


script:
  tstat_smart_resume_cool:
    sequence:
    - condition: state
      entity_id: input_boolean.tstat_peak_savings
      state: 'off'
    - condition: numeric_state
      entity_id: sensor.tstat_current_temp
      above: 77.9
    - condition: numeric_state
      entity_id: sensor.outside_temp
      above: 74.9
    - service: input_text.set_value
      entity_id: input_text.tstat_prev_mode
      data:
        value: 'cool'
    - service: input_boolean.turn_on
      entity_id: input_boolean.tstat_sched_resume


input_boolean:
  tstat_window_off: