automation:
- alias: Manage cooling for PTS
  initial_state: true
  trigger:
  - platform: event
    event_type: ifttt_webhook_received
  condition:
  - condition: template
    value_template: "{{ trigger.event.data.action in ['pts_precool', 'pts_started', 'pts_ended'] }}"
  action:
    service_template: >
      {% set alarm = states('input_text.alarm') %}
      {% set event = trigger.event.data.action %}
      {{ 'script.turn_on' if event == 'pts_started' or (event == 'pts_precool' and alarm == 'armed_away') else 'input_boolean.turn_off' }}
    data_template:
      entity_id: "{{ 'input_boolean' if trigger.event.data.action == 'pts_ended' else 'script' }}.tstat_peak_savings"


- alias: Turn cooling off - peak time savings
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.tstat_peak_savings
    from: 'off'
    to: 'on'
  action:
  - service: input_text.set_value
    entity_id: input_text.tstat_prev_mode
    data_template:
      value: "{{ 'cool' if is_state('climate.thermostat', 'cool') else 'off' }}"
  - service: climate.turn_off
    entity_id: climate.thermostat


- alias: Start sleep mode cool early if idle
  initial_state: true
  trigger:
  - platform: time
    at: &cool_sleep_workday_early '21:00:00'
  - platform: time
    at: &cool_sleep_weekend_early '21:30:00'
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'cool'
  - condition: template
    value_template: "{{ not is_state_attr('climate.thermostat', 'hvac_action', 'cooling') and not is_state('sensor.tstat_profile', 'Sleep') }}"
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: or
    conditions:
    - condition: time
      after: *cool_sleep_workday_early
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      after: *cool_sleep_weekend_early
      weekday: ['fri', 'sat']
  action:
  - service: script.turn_on
    entity_id: script.tstat_cool_sleep
  - service: input_boolean.turn_on
    entity_id: input_boolean.tstat_smart


- alias: Start home schedule earlier - sound check
  initial_state: true
  trigger:
  - platform: time
    at: '06:20:00'
  condition:
  - condition: time
    weekday: sun
  - condition: template
    value_template: "{{ state_attr('calendar.church', 'message') != None and 'sound check' in state_attr('calendar.church', 'message').lower() }}"
  - condition: template
    value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
  action:
  - service: script.turn_on
    entity_id: script.good_morning
  - condition: template
    value_template: "{{ states('climate.thermostat') in ['cool', 'heat'] }}"
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - service_template: "script.{{ states('climate.thermostat') }}_home"
  - service: input_boolean.turn_on
    entity_id: input_boolean.tstat_smart


# - alias: Turn heat off if nice outside
#   initial_state: true
#   trigger:
#   - platform: numeric_state
#     entity_id: sensor.outside_temp
#     above: 55
#     for: '02:00:00'
#   - platform: template
#     value_template: "{{ states('sensor.tstat_current_temp') | float > states('input_number.tstat_heat_home') | float }}"
#     for: '02:00:00'
#   condition:
#   - condition: state
#     entity_id: climate.thermostat
#     state: 'heat'
#   - condition: state
#     entity_id: input_boolean.tstat_hold
#     state: 'off'
#   - condition: template
#     value_template: "{{ states('sensor.tstat_current_temp') | float > states('input_number.tstat_heat_home') | float }}"
#   - condition: numeric_state
#     entity_id: sensor.outside_temp
#     above: 55
#   action:
#   - service: climate.turn_off
#     entity_id: climate.thermostat
#   - service: input_boolean.turn_on
#     entity_id: input_boolean.tstat_smart


- alias: Ask to turn heat back on
  initial_state: true
  trigger:
  - platform: time
    at: &cool_sleep_workday '21:00:00'
  - platform: time
    at: &cool_sleep_weekend '21:30:00'
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'off'
  - condition: numeric_state
    entity_id: sensor.outside_temp
    below: 45
  - condition: or
    conditions:
    - condition: time
      after: *cool_sleep_workday
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      after: *cool_sleep_workday
      weekday: ['fri', 'sat']
  action:
  - service: notify.mobile_app_matt_phone
    data_template:
      title: "Turn heat back on in sleep mode?"
      message: "It's currently {{ states('sensor.outside_temp') | float | round(0) }}Â° outside."
      data:
        actions:
        - action: heat_reenable
          title: Turn heat on


- alias: Record previous thermostat mode
  initial_state: true
  trigger:
  - platform: state
    entity_id: climate.thermostat
    from:
    - 'heat'
    - 'cool'
    - 'heat_cool'
    to: 'off'
  action:
  - service: input_text.set_value
    entity_id: input_text.tstat_prev_mode
    data_template:
      value: "{{ trigger.from_state.state }}"


- alias: Resume tstat schedule - set mode
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_boolean.tstat_sched_resume
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.tstat_peak_savings
    from: 'on'
    to: 'off'
  action:
  - service: climate.set_hvac_mode
    data:
      entity_id: climate.thermostat
      hvac_mode: 'heat'
  - service: climate.set_temperature # going from off to heat_cool apparently isn't possible, so do this intermediate step first
    data:
      entity_id: climate.thermostat
      hvac_mode: heat
      temperature: 65
  - delay: 1
  - service: climate.set_temperature # set temperatures outside of normal heating/cooling range to avoid inadvertent heating/cooling before resuming schedule
    data:
      entity_id: climate.thermostat
      hvac_mode: 'heat_cool'
      target_temp_low: 62
      target_temp_high: 82
  - wait_template: "{{ states('climate.thermostat') == states('input_text.tstat_prev_mode') }}"
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_sched_resume


script:
  tstat_smart_resume_cool:
    sequence:
    - condition: state
      entity_id: input_boolean.tstat_peak_savings
      state: 'off'
    - condition: numeric_state
      entity_id: sensor.tstat_current_temp
      above: 77.9
    - condition: numeric_state
      entity_id: sensor.outside_temp
      above: 74.9
    - service: input_text.set_value
      entity_id: input_text.tstat_prev_mode
      data:
        value: 'cool'
    - service: input_boolean.turn_on
      entity_id: input_boolean.tstat_sched_resume

  tstat_peak_savings:
    sequence:
    - condition: state
      entity_id: input_boolean.tstat_peak_savings
      state: 'off'
    - wait_template: "{{ is_state_attr('climate.thermostat', 'hvac_action', 'idle') }}"
      timeout: '00:05:00'
      continue_on_timeout: true
    - service: input_boolean.turn_on
      entity_id: input_boolean.tstat_peak_savings
    - wait_template: "{{ is_state('climate.thermostat', 'off') }}"
      timeout: '00:00:10'
      continue_on_timeout: false
    - service: notify.gotify
      data:
        title: Peak time savings active
        message: Thermostat has been turned off.