### Cooling
automation:
- alias: Thermostat home - cool
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.abode
    from: 'armed_away'
    to: 'disarmed'
  - platform: state
    entity_id: 
    - input_boolean.tstat_sched_resume
    - input_boolean.tstat_hold
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.cool_home
  - platform: homeassistant
    event: start
  - platform: time
    at: 
    - &cool_home_workday '06:45:00'
    - &cool_home_weekend '07:15:00'
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'cool'
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ not is_state('sensor.tstat_profile', 'Home') }}"
  - condition: template
    value_template: "{{ states('input_text.abode') in ['armed_home', 'disarmed'] }}"
  - condition: or
    conditions:
    - condition: time
      after: *cool_home_workday
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      after: *cool_home_weekend
      weekday: ['sat', 'sun']
  - condition: or
    conditions:
    - condition: time
      before: &cool_sleep_workday '21:15:00'
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      before: &cool_sleep_weekend '21:45:00'
      weekday: ['fri', 'sat']
  action:
  - service: script.turn_on
    entity_id: script.cool_home
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


- alias: Thermostat sleep - cool
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.abode
    from: 'armed_away'
    to: 'disarmed'
  - platform: state
    entity_id: 
    - input_boolean.tstat_sched_resume
    - input_boolean.tstat_hold
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.cool_sleep
  - platform: homeassistant
    event: start
  - platform: time
    at: 
    - *cool_sleep_workday
    - *cool_sleep_weekend
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'cool'
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ not is_state('sensor.tstat_profile', 'Sleep') }}"
  - condition: template
    value_template: "{{ states('input_text.abode') in ['armed_home', 'disarmed'] }}"
  - condition: or
    conditions:
    - condition: time
      after: *cool_sleep_workday
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      after: *cool_sleep_weekend
      weekday: ['fri', 'sat']
    - condition: time
      before: *cool_home_workday
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      before: *cool_home_weekend
      weekday: ['sat', 'sun']
  action:
  - service: script.turn_on
    entity_id: script.cool_sleep
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


### Heating
- alias: Thermostat home - heat
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.abode
    from: 'armed_away'
    to: 'disarmed'
  - platform: state
    entity_id: 
    - input_boolean.tstat_sched_resume
    - input_boolean.tstat_hold
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.heat_home
  - platform: homeassistant
    event: start
  - platform: time
    at: 
    - &heat_home_workday '06:45:00'
    - &heat_home_weekend '07:30:00'
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'heat'
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ not is_state('sensor.tstat_profile', 'Home') }}"
  - condition: template
    value_template: "{{ states('input_text.abode') in ['armed_home', 'disarmed'] }}"
  - condition: or
    conditions:
    - condition: time
      after: *heat_home_workday
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      after: *heat_home_weekend
      weekday: ['sat', 'sun']
  - condition: or
    conditions:
    - condition: time
      before: &heat_sleep_workday '21:00:00'
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      before: &heat_sleep_weekend '21:30:00'
      weekday: ['fri', 'sat']
  action:
  - service: script.turn_on
    entity_id: script.heat_home
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


- alias: Thermostat sleep - heat
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.abode
    from: 'armed_away'
    to: 'disarmed'
  - platform: state
    entity_id: 
    - input_boolean.tstat_sched_resume
    - input_boolean.tstat_hold
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.heat_sleep
  - platform: homeassistant
    event: start
  - platform: time
    at: 
    - *heat_sleep_workday
    - *heat_sleep_weekend
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'heat'
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ not is_state('sensor.tstat_profile', 'Sleep') }}"
  - condition: template
    value_template: "{{ states('input_text.abode') in ['armed_home', 'disarmed'] }}"
  - condition: or
    conditions:
    - condition: time
      after: *heat_sleep_workday
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      after: *heat_sleep_weekend
      weekday: ['fri', 'sat']
    - condition: time
      before: *heat_home_workday
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      before: *heat_home_weekend
      weekday: ['sat', 'sun']
  action:
  - service: script.turn_on
    entity_id: script.heat_sleep
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


### Away
- alias: Thermostat away
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.abode
    to: 'armed_away'
  - platform: state
    entity_id: input_text.abode
    to: 'armed_away'
    for: '00:00:30'
  condition:
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ states('climate.thermostat') in ['cool', 'heat'] and not is_state('sensor.tstat_profile', 'Away') }}"
  action:
  - service: script.turn_on
    data_template: 
      entity_id: "script.{{ states('climate.thermostat') }}_away"
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart