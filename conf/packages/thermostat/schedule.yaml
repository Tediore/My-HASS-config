### Cooling
automation:
- alias: Thermostat home - cool
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.alarm
    from: 'armed_away'
    to: 'disarmed'
  - platform: state
    entity_id: 
    - input_boolean.tstat_sched_resume
    - input_boolean.tstat_hold
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.tstat_cool_home
  - platform: homeassistant
    event: start
  - platform: time
    at: 
    - &cool_home_workday input_datetime.tstat_cool_home_workday
    - &cool_home_weekend input_datetime.tstat_cool_home_weekend
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'heat_cool'
  - condition: or
    conditions:
    - condition: time
      after: *cool_home_workday
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      after: *cool_home_weekend
      weekday: ['sat', 'sun']
  - condition: or
    conditions:
    - condition: time
      before: &cool_sleep_workday input_datetime.tstat_cool_sleep_workday
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      before: &cool_sleep_weekend input_datetime.tstat_cool_sleep_weekend
      weekday: ['fri', 'sat']
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: &no_bool "{{ 'none' if trigger.platform == 'state' and trigger.to_state.domain == 'input_number' else 'input_boolean.tstat_cool_sleep' }}"
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
  - service: script.turn_on
    entity_id: script.tstat_cool_home
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


- alias: Thermostat sleep - cool
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.alarm
    from: 'armed_away'
    to: 'disarmed'
  - platform: state
    entity_id: 
    - input_boolean.tstat_sched_resume
    - input_boolean.tstat_hold
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.tstat_cool_sleep
  - platform: homeassistant
    event: start
  - platform: time
    at: 
    - *cool_sleep_workday
    - *cool_sleep_weekend
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'heat_cool'
  - condition: or
    conditions:
    - condition: time
      after: *cool_sleep_workday
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      after: *cool_sleep_weekend
      weekday: ['fri', 'sat']
    - condition: time
      before: *cool_home_workday
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      before: *cool_home_weekend
      weekday: ['sat', 'sun']
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: *no_bool
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
  - service: script.turn_on
    entity_id: script.tstat_cool_sleep
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


### Heating
- alias: Thermostat home - heat
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.alarm
    from: 'armed_away'
    to: 'disarmed'
  - platform: state
    entity_id: 
    - input_boolean.tstat_sched_resume
    - input_boolean.tstat_hold
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.tstat_heat_home
  - platform: homeassistant
    event: start
  - platform: time
    at: 
    - &heat_home_workday input_datetime.tstat_heat_home_workday
    - &heat_home_weekend input_datetime.tstat_heat_home_weekend
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'heat_cool'
  - condition: or
    conditions:
    - condition: time
      after: *heat_home_workday
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      after: *heat_home_weekend
      weekday: ['sat', 'sun']
  - condition: or
    conditions:
    - condition: time
      before: &heat_sleep_workday input_datetime.tstat_heat_sleep_workday
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      before: &heat_sleep_weekend input_datetime.tstat_heat_sleep_weekend
      weekday: ['fri', 'sat']
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: *no_bool
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
  - service: script.turn_on
    entity_id: script.tstat_heat_home
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


- alias: Thermostat sleep - heat
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.alarm
    from: 'armed_away'
    to: 'disarmed'
  - platform: state
    entity_id: 
    - input_boolean.tstat_sched_resume
    - input_boolean.tstat_hold
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.tstat_heat_sleep
  - platform: homeassistant
    event: start
  - platform: time
    at: 
    - *heat_sleep_workday
    - *heat_sleep_weekend
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'heat_cool'
  - condition: or
    conditions:
    - condition: time
      after: *heat_sleep_workday
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      after: *heat_sleep_weekend
      weekday: ['fri', 'sat']
    - condition: time
      before: *heat_home_workday
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      before: *heat_home_weekend
      weekday: ['sat', 'sun']
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: *no_bool
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ states('input_text.alarm') in ['armed_home', 'disarmed'] }}"
  - service: script.turn_on
    entity_id: script.tstat_heat_sleep
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


### Away
- alias: Thermostat away
  initial_state: true
  trigger:
  - platform: state
    entity_id: input_text.alarm
    to: 'armed_away'
  - platform: state
    entity_id: input_text.alarm
    to: 'armed_away'
    for: '00:00:30'
  condition:
  - condition: state
    entity_id:
    - input_boolean.tstat_hold
    - input_boolean.tstat_away
    state: 'off'
  - condition: template
    value_template: "{{ not is_state('climate.thermostat', 'off') }}"
  action:
  - service: script.turn_on
    entity_id: script.tstat_away
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart