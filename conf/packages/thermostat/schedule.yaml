### Cooling
automation:
- alias: Thermostat home - cool
  initial_state: true
  trigger:
  - platform: state
    entity_id: 
    - input_boolean.sensor_tripped
    - input_boolean.tstat_sched_resume
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.cool_home
  - platform: homeassistant
    event: start
  - platform: time
    at: '06:45:00' # Workday
  - platform: time
    at: '07:30:00' # Weekend
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'cool'
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ not is_state('sensor.tstat_profile', 'Home') }}"
  - condition: template
    value_template: "{{ states('alarm_control_panel.abode') in ['armed_home', 'disarmed'] }}"
  - condition: or
    conditions:
    - condition: time
      after: '06:45:00'
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      after: '07:30:00'
      weekday: ['sat', 'sun']
  - condition: or
    conditions:
    - condition: time
      before: '21:00:00'
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      before: '21:30:00'
      weekday: ['fri', 'sat']
  action:
  - service: script.cool_home
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


- alias: Thermostat sleep - cool
  initial_state: true
  trigger:
  - platform: state
    entity_id: 
    - input_boolean.sensor_tripped
    - input_boolean.tstat_sched_resume
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.cool_sleep
  - platform: homeassistant
    event: start
  - platform: time
    at: '21:00:00' # Work night
  - platform: time
    at: '21:30:00' # Weekend
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'cool'
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ not is_state('sensor.tstat_profile', 'Sleep') }}"
  - condition: template
    value_template: "{{ states('alarm_control_panel.abode') in ['armed_home', 'disarmed'] }}"
  - condition: or
    conditions:
    - condition: time
      after: '21:00:00'
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      after: '21:30:00'
      weekday: ['fri', 'sat']
    - condition: time
      before: '06:45:00'
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      before: '07:30:00'
      weekday: ['sat', 'sun']
  action:
  - service: script.cool_sleep
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


### Heating
- alias: Thermostat home - heat
  initial_state: true
  trigger:
  - platform: state
    entity_id: 
    - input_boolean.sensor_tripped
    - input_boolean.tstat_sched_resume
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.heat_home
  - platform: homeassistant
    event: start
  - platform: time
    at: '06:45:00' # Workday
  - platform: time
    at: '07:30:00' # Weekend
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'heat'
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ not is_state('sensor.tstat_profile', 'Home') }}"
  - condition: template
    value_template: "{{ states('alarm_control_panel.abode') in ['armed_home', 'disarmed'] }}"
  - condition: or
    conditions:
    - condition: time
      after: '06:45:00'
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      after: '07:30:00'
      weekday: ['sat', 'sun']
  - condition: or
    conditions:
    - condition: time
      before: '21:00:00'
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      before: '21:30:00'
      weekday: ['fri', 'sat']
  action:
  - service: script.heat_home
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


- alias: Thermostat sleep - heat
  initial_state: true
  trigger:
  - platform: state
    entity_id: 
    - input_boolean.sensor_tripped
    - input_boolean.tstat_sched_resume
    from: 'on'
    to: 'off'
  - platform: state
    entity_id: input_number.heat_sleep
  - platform: homeassistant
    event: start
  - platform: time
    at: '21:00:00' # Work night
  - platform: time
    at: '21:30:00' # Weekend
  condition:
  - condition: state
    entity_id: climate.thermostat
    state: 'heat'
  - condition: state
    entity_id: input_boolean.tstat_hold
    state: 'off'
  - condition: template
    value_template: "{{ not is_state('sensor.tstat_profile', 'Sleep') }}"
  - condition: template
    value_template: "{{ states('alarm_control_panel.abode') in ['armed_home', 'disarmed'] }}"
  - condition: or
    conditions:
    - condition: time
      after: '21:00:00'
      weekday: ['sun', 'mon', 'tue', 'wed', 'thu']
    - condition: time
      after: '21:30:00'
      weekday: ['fri', 'sat']
    - condition: time
      before: '06:45:00'
      weekday: ['mon', 'tue', 'wed', 'thu', 'fri']
    - condition: time
      before: '07:30:00'
      weekday: ['sat', 'sun']
  action:
  - service: script.heat_sleep
  - service: input_boolean.turn_off
    entity_id: input_boolean.tstat_smart


### Away
- alias: Thermostat away
  initial_state: true
  trigger:
  - platform: state
    entity_id: alarm_control_panel.abode
    to: 'armed_away'
  - platform: state
    entity_id: alarm_control_panel.abode
    to: 'armed_away'
    for: '00:00:30'
  condition:
  - condition: template
    value_template: "{{ states('climate.thermostat') in ['cool', 'heat'] and not is_state('sensor.tstat_profile', 'Away') }}"
  action:
  - service_template: "script.{{ states('climate.thermostat') }}_away"
  - service: input_boolean.turn_off
    entity_id: 
    - input_boolean.tstat_hold
    - input_boolean.tstat_smart